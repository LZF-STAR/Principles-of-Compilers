
;; Function std::ctype<char>::do_widen (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=1561, decl_uid=37570, cgraph_uid=532, symbol_order=561)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


std::ctype<char>::do_widen

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={2d,2u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r74={1d,1u} 
;;    total ref usage 35{23d,12u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	1[0,0] 2[1,1] 8[2,2] 10[3,4] 11[5,5] 12[6,6] 13[7,7] 14[8,8] 15[9,9] 16[10,10] 17[11,11] 42[12,12] 43[13,13] 44[14,14] 45[15,15] 46[16,16] 47[17,17] 48[18,18] 49[19,19] 64[20,20] 65[21,21] 74[22,22] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(1){ }d1(2){ }d2(8){ }d4(10){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(15){ }d10(16){ }d11(17){ }d12(42){ }d13(43){ }d14(44){ }d15(45){ }d16(46){ }d17(47){ }d18(48){ }d19(49){ }d20(64){ }d21(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(21) 1[0],2[1],8[2],10[4],11[5],12[6],13[7],14[8],15[9],16[10],17[11],42[12],43[13],44[14],45[15],46[16],47[17],48[18],49[19],64[20],65[21]
;; rd  kill	(22) 1[0],2[1],8[2],10[3,4],11[5],12[6],13[7],14[8],15[9],16[10],17[11],42[12],43[13],44[14],45[15],46[16],47[17],48[18],49[19],64[20],65[21]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; rd  out 	(6) 1[0],2[1],8[2],11[5],64[20],65[21]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ d1(bb 0 insn -1) }u-1(8){ d2(bb 0 insn -1) }u-1(64){ d20(bb 0 insn -1) }u-1(65){ d21(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; lr  def 	 10 [a0] 74
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0] 74
;; live  kill	
;; rd  in  	(6) 1[0],2[1],8[2],11[5],64[20],65[21]
;; rd  gen 	(2) 10[3],74[22]
;; rd  kill	(3) 10[3,4],74[22]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; rd  out 	(6) 1[0],2[1],8[2],10[3],64[20],65[21]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d1(bb 0 insn -1) }
;;   reg 8 { d2(bb 0 insn -1) }
;;   reg 64 { d20(bb 0 insn -1) }
;;   reg 65 { d21(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ d0(bb 0 insn -1) }u-1(2){ d1(bb 0 insn -1) }u-1(8){ d2(bb 0 insn -1) }u-1(10){ d3(bb 2 insn 11) }u-1(65){ d21(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  def 	
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(6) 1[0],2[1],8[2],10[3],64[20],65[21]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 1 { d0(bb 0 insn -1) }
;;   reg 2 { d1(bb 0 insn -1) }
;;   reg 8 { d2(bb 0 insn -1) }
;;   reg 10 { d3(bb 2 insn 11) }
;;   reg 65 { d21(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
Finished finding needed instructions:
  Adding insn 11 to worklist
Processing use of (reg 74 [ __c ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 11 a1) in insn 3:
Processing use of (reg 10 a0) in insn 12:
starting the processing of deferred insns
ending the processing of deferred insns


std::ctype<char>::do_widen

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={2d,2u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r74={1d,1u} 
;;    total ref usage 35{23d,12u,0e} in 3{3 regular + 0 call} insns.
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 5 4 2 (set (reg/v:DI 74 [ __c ])
        (reg:DI 11 a1 [ __c ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1087:7 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 11 a1 [ __c ])
        (nil)))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg/i:DI 10 a0)
        (reg/v:DI 74 [ __c ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/v:DI 74 [ __c ])
        (nil)))
(insn 12 11 0 2 (use (reg/i:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 -1
     (nil))

;; Function std::endl.isra (_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, funcdef_no=2298, decl_uid=49501, cgraph_uid=1045, symbol_order=1223)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)


std::endl.isra

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={5d} r1={5d,1u} r2={1d,13u} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={1d,8u} r10={9d,6u} r11={8d,2u} r12={6d} r13={6d} r14={6d} r15={6d} r16={6d} r17={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,7u} r65={1d,8u} r77={1d,6u} r79={3d,1u} r81={1d,2u} r83={1d,3u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 297{233d,64u,0e} in 26{21 regular + 5 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217
;;  reg->defs[] map:	0[0,4] 1[5,9] 2[10,10] 3[11,15] 4[16,20] 5[21,25] 6[26,30] 7[31,35] 8[36,36] 10[37,45] 11[46,53] 12[54,59] 13[60,65] 14[66,71] 15[72,77] 16[78,83] 17[84,89] 28[90,94] 29[95,99] 30[100,104] 31[105,109] 32[110,114] 33[115,119] 34[120,124] 35[125,129] 36[130,134] 37[135,139] 38[140,144] 39[145,149] 42[150,155] 43[156,161] 44[162,167] 45[168,173] 46[174,179] 47[180,185] 48[186,191] 49[192,197] 60[198,202] 61[203,207] 62[208,212] 63[213,217] 64[218,218] 65[219,219] 77[220,220] 79[221,223] 81[224,224] 83[225,225] 84[226,226] 85[227,227] 86[228,228] 88[229,229] 89[230,230] 90[231,231] 91[232,232] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(1){ }d10(2){ }d36(8){ }d45(10){ }d53(11){ }d59(12){ }d65(13){ }d71(14){ }d77(15){ }d83(16){ }d89(17){ }d155(42){ }d161(43){ }d167(44){ }d173(45){ }d179(46){ }d185(47){ }d191(48){ }d197(49){ }d218(64){ }d219(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(21) 1[9],2[10],8[36],10[45],11[53],12[59],13[65],14[71],15[77],16[83],17[89],42[155],43[161],44[167],45[173],46[179],47[185],48[191],49[197],64[218],65[219]
;; rd  kill	(110) 1[5,6,7,8,9],2[10],8[36],10[37,38,39,40,41,42,43,44,45],11[46,47,48,49,50,51,52,53],12[54,55,56,57,58,59],13[60,61,62,63,64,65],14[66,67,68,69,70,71],15[72,73,74,75,76,77],16[78,79,80,81,82,83],17[84,85,86,87,88,89],42[150,151,152,153,154,155],43[156,157,158,159,160,161],44[162,163,164,165,166,167],45[168,169,170,171,172,173],46[174,175,176,177,178,179],47[180,181,182,183,184,185],48[186,187,188,189,190,191],49[192,193,194,195,196,197],64[218],65[219]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; rd  out 	(5) 2[10],8[36],10[45],64[218],65[219]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(64){ d218(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; lr  def 	 77 83 84 85 86
;; live  in  	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  gen 	 77 83 84 85 86
;; live  kill	
;; rd  in  	(5) 2[10],8[36],10[45],64[218],65[219]
;; rd  gen 	(5) 77[220],83[225],84[226],85[227],86[228]
;; rd  kill	(5) 77[220],83[225],84[226],85[227],86[228]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; rd  out 	(6) 2[10],8[36],64[218],65[219],77[220],83[225]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 64 { d218(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(64){ d218(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; rd  in  	(6) 2[10],8[36],64[218],65[219],77[220],83[225]
;; rd  gen 	(0) 
;; rd  kill	(5) 1[5,6,7,8,9]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]
;; rd  out 	(3) 2[10],64[218],65[219]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 64 { d218(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(64){ d218(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 88 89
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 88 89
;; live  kill	
;; rd  in  	(6) 2[10],8[36],64[218],65[219],77[220],83[225]
;; rd  gen 	(2) 88[229],89[230]
;; rd  kill	(2) 88[229],89[230]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; rd  out 	(6) 2[10],8[36],64[218],65[219],77[220],83[225]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 64 { d218(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(64){ d218(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 79
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 79
;; live  kill	
;; rd  in  	(6) 2[10],8[36],64[218],65[219],77[220],83[225]
;; rd  gen 	(1) 79[223]
;; rd  kill	(3) 79[221,222,223]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; rd  out 	(6) 2[10],8[36],64[218],65[219],79[223],83[225]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 64 { d218(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

( 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(64){ d218(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 79 81 90 91
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 10 [a0] 79 81 90 91
;; live  kill	 1 [ra]
;; rd  in  	(6) 2[10],8[36],64[218],65[219],77[220],83[225]
;; rd  gen 	(4) 79[222],81[224],90[231],91[232]
;; rd  kill	(11) 1[5,6,7,8,9],79[221,222,223],81[224],90[231],91[232]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83
;; rd  out 	(8) 2[10],8[36],64[218],65[219],77[220],79[222],81[224],83[225]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 64 { d218(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(64){ d218(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 79
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81 83
;; live  gen 	 10 [a0] 11 [a1] 79
;; live  kill	 1 [ra]
;; rd  in  	(8) 2[10],8[36],64[218],65[219],77[220],79[222],81[224],83[225]
;; rd  gen 	(2) 10[40],79[221]
;; rd  kill	(17) 1[5,6,7,8,9],10[37,38,39,40,41,42,43,44,45],79[221,222,223]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; rd  out 	(6) 2[10],8[36],64[218],65[219],79[221],83[225]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 64 { d218(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

( 5 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(64){ d218(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  gen 	 10 [a0] 11 [a1]
;; live  kill	 1 [ra]
;; rd  in  	(10) 2[10],8[36],64[218],65[219],77[220],79[221,222,223],81[224],83[225]
;; rd  gen 	(1) 10[37]
;; rd  kill	(14) 1[5,6,7,8,9],10[37,38,39,40,41,42,43,44,45]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; rd  out 	(4) 2[10],8[36],64[218],65[219]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 64 { d218(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ d10(bb 0 insn -1) }u-1(8){ d36(bb 0 insn -1) }u-1(65){ d219(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  def 	
;; live  in  	 2 [sp] 8 [s0] 65 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 2[10],8[36],64[218],65[219]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 1 { }
;;   reg 2 { d10(bb 0 insn -1) }
;;   reg 8 { d36(bb 0 insn -1) }
;;   reg 65 { d219(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 13 to worklist
  Adding insn 20 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 36 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
Finished finding needed instructions:
Processing use of (reg 2 sp) in insn 43:
Processing use of (reg 10 a0) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 11 a1) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 79 [ _18 ]) in insn 41:
  Adding insn 22 to worklist
  Adding insn 4 to worklist
  Adding insn 37 to worklist
Processing use of (reg 10 a0) in insn 37:
Processing use of (reg 77 [ _13 ]) in insn 22:
  Adding insn 10 to worklist
Processing use of (reg 86) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 83 [ __os ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 85 [ MEM[(long int *)_2 + -24B] ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 84 [ __os_1(D)->_vptr.basic_ostream ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 83 [ __os ]) in insn 7:
Processing use of (reg 10 a0) in insn 2:
Processing use of (reg 83 [ __os ]) in insn 42:
Processing use of (reg 2 sp) in insn 46:
Processing use of (reg 10 a0) in insn 46:
Processing use of (reg 2 sp) in insn 36:
Processing use of (reg 10 a0) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 11 a1) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 81 [ _22 ]) in insn 36:
  Adding insn 30 to worklist
Processing use of (reg 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ]) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 77 [ _13 ]) in insn 29:
Processing use of (reg 77 [ _13 ]) in insn 35:
Processing use of (reg 2 sp) in insn 28:
Processing use of (reg 10 a0) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 77 [ _13 ]) in insn 27:
Processing use of (reg 81 [ _22 ]) in insn 32:
Processing use of (reg 91) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (subreg (reg 88 [ MEM[(const struct ctype *)_13]._M_widen_ok ]) 0) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 77 [ _13 ]) in insn 17:
Processing use of (reg 2 sp) in insn 13:
Processing use of (reg 77 [ _13 ]) in insn 11:
starting the processing of deferred insns
ending the processing of deferred insns


std::endl.isra

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={5d} r1={5d,1u} r2={1d,13u} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={1d,8u} r10={9d,6u} r11={8d,2u} r12={6d} r13={6d} r14={6d} r15={6d} r16={6d} r17={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,7u} r65={1d,8u} r77={1d,6u} r79={3d,1u} r81={1d,2u} r83={1d,3u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 297{233d,64u,0e} in 26{21 regular + 5 call} insns.
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 83 [ __os ])
        (reg:DI 10 a0 [ __os ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":684:5 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0 [ __os ])
        (nil)))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
        (mem/f:DI (reg/v/f:DI 83 [ __os ]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(insn 8 7 9 2 (set (reg:DI 85 [ MEM[(long int *)_2 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_2 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 86)
        (plus:DI (reg/v/f:DI 83 [ __os ])
            (reg:DI 85 [ MEM[(long int *)_2 + -24B] ]))) 4 {adddi3}
     (expr_list:REG_DEAD (reg:DI 85 [ MEM[(long int *)_2 + -24B] ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 77 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 86)
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_5 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg/f:DI 77 [ _13 ])
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 15)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 15 3 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(code_label 15 13 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 19 4 (set (reg:DI 88 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 77 [ _13 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_13]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(insn 19 17 20 4 (set (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (zero_extend:DI (subreg:QI (reg:DI 88 [ MEM[(const struct ctype *)_13]._M_widen_ok ]) 0))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:DI 88 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (nil)))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 25)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 25 5 (set (reg:DI 79 [ _18 ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 77 [ _13 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_13]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg/f:DI 77 [ _13 ])
        (nil)))
      ; pc falls through to BB 8
(code_label 25 22 26 6 5 (nil) [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 10 a0)
        (reg/f:DI 77 [ _13 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 28 27 29 6 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 29 28 30 6 (set (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
        (mem/f:DI (reg/f:DI 77 [ _13 ]) [2 MEM[(const struct ctype *)_13].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 30 29 31 6 (set (reg/f:DI 81 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_21 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
        (nil)))
(insn 31 30 4 6 (set (reg/f:DI 91)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (nil))
(insn 4 31 32 6 (set (reg:DI 79 [ _18 ])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(jump_insn 32 4 33 6 (set (pc)
        (if_then_else (eq (reg/f:DI 81 [ _22 ])
                (reg/f:DI 91))
            (label_ref:DI 39)
            (pc))) 182 {*branchdi}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 39)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 35 34 36 7 (set (reg:DI 10 a0)
        (reg/f:DI 77 [ _13 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 77 [ _13 ])
        (nil)))
(call_insn 36 35 37 7 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 81 [ _22 ]) [0 *OBJ_TYPE_REF(_22;_13->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_DEAD (reg/f:DI 81 [ _22 ])
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 37 36 39 7 (set (reg:DI 79 [ _18 ])
        (reg:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(code_label 39 37 40 8 6 (nil) [1 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg:DI 11 a1)
        (reg:DI 79 [ _18 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 79 [ _18 ])
        (nil)))
(insn 42 41 43 8 (set (reg:DI 10 a0)
        (reg/v/f:DI 83 [ __os ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/v/f:DI 83 [ __os ])
        (nil)))
(call_insn 43 42 46 8 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn/j 46 43 0 8 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 252 {sibcall_value_internal}
     (expr_list:REG_UNUSED (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))

;; Function main (main, funcdef_no=1808, decl_uid=44612, cgraph_uid=542, symbol_order=572) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 17 (  1.2)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={12d} r1={13d,1u} r2={1d,25u} r3={12d} r4={12d} r5={12d} r6={12d} r7={12d} r8={1d,13u} r10={21d,14u} r11={19d,6u} r12={13d} r13={13d} r14={13d} r15={13d} r16={13d} r17={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r60={12d} r61={12d} r62={12d} r63={12d} r64={1d,12u} r65={1d,18u,1e} r73={1d,1u} r74={2d,1u} r77={2d,3u} r78={1d,3u} r79={2d,2u} r85={1d,6u} r87={3d,1u} r89={1d,2u} r94={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r109={1d,1u} r111={1d,1u} r112={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 662{534d,127u,1e} in 65{53 regular + 12 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500
;;  reg->defs[] map:	0[0,11] 1[12,24] 2[25,25] 3[26,37] 4[38,49] 5[50,61] 6[62,73] 7[74,85] 8[86,86] 10[87,107] 11[108,126] 12[127,139] 13[140,152] 14[153,165] 15[166,178] 16[179,191] 17[192,204] 28[205,216] 29[217,228] 30[229,240] 31[241,252] 32[253,264] 33[265,276] 34[277,288] 35[289,300] 36[301,312] 37[313,324] 38[325,336] 39[337,348] 42[349,361] 43[362,374] 44[375,387] 45[388,400] 46[401,413] 47[414,426] 48[427,439] 49[440,452] 60[453,464] 61[465,476] 62[477,488] 63[489,500] 64[501,501] 65[502,502] 73[503,503] 74[504,505] 77[506,507] 78[508,508] 79[509,510] 85[511,511] 87[512,514] 89[515,515] 94[516,516] 96[517,517] 97[518,518] 98[519,519] 99[520,520] 100[521,521] 101[522,522] 102[523,523] 104[524,524] 105[525,525] 106[526,526] 109[527,527] 111[528,528] 112[529,529] 116[530,530] 117[531,531] 118[532,532] 119[533,533] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d24(1){ }d25(2){ }d86(8){ }d107(10){ }d126(11){ }d139(12){ }d152(13){ }d165(14){ }d178(15){ }d191(16){ }d204(17){ }d361(42){ }d374(43){ }d387(44){ }d400(45){ }d413(46){ }d426(47){ }d439(48){ }d452(49){ }d501(64){ }d502(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(21) 1[24],2[25],8[86],10[107],11[126],12[139],13[152],14[165],15[178],16[191],17[204],42[361],43[374],44[387],45[400],46[413],47[426],48[439],49[452],64[501],65[502]
;; rd  kill	(239) 1[12,13,14,15,16,17,18,19,20,21,22,23,24],2[25],8[86],10[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],11[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],12[127,128,129,130,131,132,133,134,135,136,137,138,139],13[140,141,142,143,144,145,146,147,148,149,150,151,152],14[153,154,155,156,157,158,159,160,161,162,163,164,165],15[166,167,168,169,170,171,172,173,174,175,176,177,178],16[179,180,181,182,183,184,185,186,187,188,189,190,191],17[192,193,194,195,196,197,198,199,200,201,202,203,204],42[349,350,351,352,353,354,355,356,357,358,359,360,361],43[362,363,364,365,366,367,368,369,370,371,372,373,374],44[375,376,377,378,379,380,381,382,383,384,385,386,387],45[388,389,390,391,392,393,394,395,396,397,398,399,400],46[401,402,403,404,405,406,407,408,409,410,411,412,413],47[414,415,416,417,418,419,420,421,422,423,424,425,426],48[427,428,429,430,431,432,433,434,435,436,437,438,439],49[440,441,442,443,444,445,446,447,448,449,450,451,452],64[501],65[502]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; rd  out 	(4) 2[25],8[86],64[501],65[502]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 11 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 94 96 97 98 117
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0] 11 [a1] 94 96 97 98 117
;; live  kill	 1 [ra]
;; rd  in  	(4) 2[25],8[86],64[501],65[502]
;; rd  gen 	(5) 94[516],96[517],97[518],98[519],117[531]
;; rd  kill	(18) 1[12,13,14,15,16,17,18,19,20,21,22,23,24],94[516],96[517],97[518],98[519],117[531]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; rd  out 	(5) 2[25],8[86],64[501],65[502],117[531]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 74 77 79 118 119
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  gen 	 74 77 79 118 119
;; live  kill	
;; rd  in  	(5) 2[25],8[86],64[501],65[502],117[531]
;; rd  gen 	(5) 74[505],77[507],79[510],118[532],119[533]
;; rd  kill	(8) 74[504,505],77[506,507],79[509,510],118[532],119[533]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; rd  out 	(10) 2[25],8[86],64[501],65[502],74[505],77[507],79[510],117[531],118[532],119[533]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 10 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 118
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 73 77 78 85 99 100 101 102
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 73 77 78 85 99 100 101 102
;; live  kill	 1 [ra]
;; rd  in  	(17) 2[25],8[86],10[90],64[501],65[502],74[504,505],77[506,507],79[509,510],109[527],111[528],112[529],117[531],118[532],119[533]
;; rd  gen 	(9) 10[98],73[503],77[506],78[508],85[511],99[520],100[521],101[522],102[523]
;; rd  kill	(43) 1[12,13,14,15,16,17,18,19,20,21,22,23,24],10[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],73[503],77[506,507],78[508],85[511],99[520],100[521],101[522],102[523]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; rd  out 	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],117[531],118[532],119[533]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; rd  in  	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],117[531],118[532],119[533]
;; rd  gen 	(0) 
;; rd  kill	(13) 1[12,13,14,15,16,17,18,19,20,21,22,23,24]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]
;; rd  out 	(3) 2[25],64[501],65[502]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85
;; lr  def 	 104 105
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 104 105
;; live  kill	
;; rd  in  	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],117[531],118[532],119[533]
;; rd  gen 	(2) 104[524],105[525]
;; rd  kill	(2) 104[524],105[525]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; rd  out 	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],117[531],118[532],119[533]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 6 )->[7]->( 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85
;; lr  def 	 87
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 87
;; live  kill	
;; rd  in  	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],117[531],118[532],119[533]
;; rd  gen 	(1) 87[514]
;; rd  kill	(3) 87[512,513,514]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; rd  out 	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],87[514],117[531],118[532],119[533]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 6 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85 119
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 87 89 106
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 10 [a0] 87 89 106
;; live  kill	 1 [ra]
;; rd  in  	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],117[531],118[532],119[533]
;; rd  gen 	(3) 87[512],89[515],106[526]
;; rd  kill	(18) 1[12,13,14,15,16,17,18,19,20,21,22,23,24],87[512,513,514],89[515],106[526]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119
;; rd  out 	(15) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],87[512],89[515],117[531],118[532],119[533]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 89 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85 89
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 87
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 89 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 87
;; live  kill	 1 [ra]
;; rd  in  	(15) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],87[512],89[515],117[531],118[532],119[533]
;; rd  gen 	(2) 10[93],87[513]
;; rd  kill	(37) 1[12,13,14,15,16,17,18,19,20,21,22,23,24],10[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],87[512,513,514]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; rd  out 	(13) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],87[513],117[531],118[532],119[533]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 7 8 9 )->[10]->( 4 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 78 79 87
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 74 79 109 111 112
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 74 79 109 111 112
;; live  kill	 1 [ra]
;; rd  in  	(17) 2[25],8[86],64[501],65[502],73[503],77[506],78[508],79[509,510],85[511],87[512,513,514],89[515],117[531],118[532],119[533]
;; rd  gen 	(6) 10[90],74[504],79[509],109[527],111[528],112[529]
;; rd  kill	(41) 1[12,13,14,15,16,17,18,19,20,21,22,23,24],10[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],74[504,505],79[509,510],109[527],111[528],112[529]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; rd  out 	(10) 2[25],8[86],64[501],65[502],74[504],77[506],79[509],117[531],118[532],119[533]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 2 10 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  def 	 116
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  gen 	 116
;; live  kill	
;; rd  in  	(10) 2[25],8[86],64[501],65[502],74[504],77[506],79[509],117[531],118[532],119[533]
;; rd  gen 	(1) 116[530]
;; rd  kill	(1) 116[530]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; rd  out 	(4) 2[25],8[86],64[501],65[502]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 11 )->[12]->( )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; rd  in  	(4) 2[25],8[86],64[501],65[502]
;; rd  gen 	(0) 
;; rd  kill	(13) 1[12,13,14,15,16,17,18,19,20,21,22,23,24]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]
;; rd  out 	(3) 2[25],64[501],65[502]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 11 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(64){ d501(bb 0 insn -1) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 10 [a0]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0]
;; live  kill	
;; rd  in  	(4) 2[25],8[86],64[501],65[502]
;; rd  gen 	(1) 10[88]
;; rd  kill	(21) 10[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; rd  out 	(5) 2[25],8[86],10[88],64[501],65[502]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 64 { d501(bb 0 insn -1) }
;;   reg 65 { d502(bb 0 insn -1) }

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ d25(bb 0 insn -1) }u-1(8){ d86(bb 0 insn -1) }u-1(10){ d88(bb 13 insn 103) }u-1(65){ d502(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  def 	
;; live  in  	 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 2[25],8[86],10[88],64[501],65[502]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 1 { }
;;   reg 2 { d25(bb 0 insn -1) }
;;   reg 8 { d86(bb 0 insn -1) }
;;   reg 10 { d88(bb 13 insn 103) }
;;   reg 65 { d502(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 33 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 4 to worklist
  Adding insn 46 to worklist
  Adding insn 40 to worklist
  Adding insn 48 to worklist
  Adding insn 55 to worklist
  Adding insn 67 to worklist
  Adding insn 63 to worklist
  Adding insn 71 to worklist
  Adding insn 90 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 100 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
  Adding insn 103 to worklist
Processing use of (reg 10 a0) in insn 104:
Processing use of (reg 2 sp) in insn 100:
Processing use of (reg 65 frame) in insn 98:
Processing use of (reg 117) in insn 98:
  Adding insn 3 to worklist
Processing use of (reg 116) in insn 99:
Processing use of (reg 2 sp) in insn 78:
Processing use of (reg 10 a0) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 11 a1) in insn 78:
  Adding insn 76 to worklist
Processing use of (reg 87 [ _32 ]) in insn 76:
  Adding insn 57 to worklist
  Adding insn 72 to worklist
  Adding insn 119 to worklist
Processing use of (reg 10 a0) in insn 72:
Processing use of (reg 85 [ _27 ]) in insn 57:
  Adding insn 45 to worklist
Processing use of (reg 102) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 78 [ _15 ]) in insn 44:
  Adding insn 41 to worklist
Processing use of (reg 101 [ MEM[(long int *)_20 + -24B] ]) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 100 [ _15->_vptr.basic_ostream ]) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 78 [ _15 ]) in insn 42:
Processing use of (reg 10 a0) in insn 41:
Processing use of (reg 78 [ _15 ]) in insn 77:
Processing use of (reg 2 sp) in insn 81:
Processing use of (reg 10 a0) in insn 81:
Processing use of (reg 79 [ i ]) in insn 90:
  Adding insn 83 to worklist
Processing use of (reg 112 [ n ]) in insn 90:
  Adding insn 88 to worklist
Processing use of (subreg (reg 111 [ n ]) 0) in insn 88:
  Adding insn 86 to worklist
Processing use of (reg 65 frame) in insn 86:
Processing use of (reg 109) in insn 83:
  Adding insn 82 to worklist
Processing use of (subreg (reg 79 [ i ]) 0) in insn 82:
  Adding insn 5 to worklist
Processing use of (reg 2 sp) in insn 71:
Processing use of (reg 10 a0) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 11 a1) in insn 71:
  Adding insn 120 to worklist
Processing use of (reg 89 [ _36 ]) in insn 71:
  Adding insn 65 to worklist
Processing use of (reg 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ]) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 85 [ _27 ]) in insn 64:
Processing use of (reg 85 [ _27 ]) in insn 70:
Processing use of (reg 2 sp) in insn 63:
Processing use of (reg 10 a0) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 85 [ _27 ]) in insn 62:
Processing use of (reg 89 [ _36 ]) in insn 67:
Processing use of (reg 119) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ]) in insn 55:
  Adding insn 54 to worklist
Processing use of (subreg (reg 104 [ MEM[(const struct ctype *)_27]._M_widen_ok ]) 0) in insn 54:
  Adding insn 52 to worklist
Processing use of (reg 85 [ _27 ]) in insn 52:
Processing use of (reg 2 sp) in insn 48:
Processing use of (reg 2 sp) in insn 40:
Processing use of (reg 10 a0) in insn 40:
  Adding insn 117 to worklist
Processing use of (reg 11 a1) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 77 [ b ]) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 99) in insn 37:
  Adding insn 36 to worklist
Processing use of (subreg (reg 74 [ a ]) 0) in insn 36:
  Adding insn 7 to worklist
  Adding insn 84 to worklist
Processing use of (subreg (reg 77 [ b ]) 0) in insn 36:
  Adding insn 6 to worklist
Processing use of (reg 73 [ b ]) in insn 84:
  Adding insn 35 to worklist
Processing use of (reg 77 [ b ]) in insn 35:
Processing use of (reg 118) in insn 117:
  Adding insn 39 to worklist
Processing use of (reg 85 [ _27 ]) in insn 46:
Processing use of (reg 65 frame) in insn 4:
Processing use of (reg 117) in insn 4:
Processing use of (reg 2 sp) in insn 14:
Processing use of (reg 10 a0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 11 a1) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 94) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 65 frame) in insn 11:
Processing use of (reg 2 sp) in insn 17:
Processing use of (reg 10 a0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 11 a1) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 2 sp) in insn 20:
Processing use of (reg 10 a0) in insn 20:
Processing use of (reg 2 sp) in insn 23:
Processing use of (reg 10 a0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 11 a1) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 2 sp) in insn 26:
Processing use of (reg 10 a0) in insn 26:
Processing use of (reg 97 [ n ]) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 98) in insn 33:
  Adding insn 32 to worklist
Processing use of (subreg (reg 96 [ n ]) 0) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 65 frame) in insn 29:
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={12d} r1={13d,1u} r2={1d,25u} r3={12d} r4={12d} r5={12d} r6={12d} r7={12d} r8={1d,13u} r10={21d,14u} r11={19d,6u} r12={13d} r13={13d} r14={13d} r15={13d} r16={13d} r17={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r60={12d} r61={12d} r62={12d} r63={12d} r64={1d,12u} r65={1d,18u,1e} r73={1d,1u} r74={2d,1u} r77={2d,3u} r78={1d,3u} r79={2d,2u} r85={1d,6u} r87={3d,1u} r89={1d,2u} r94={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r109={1d,1u} r111={1d,1u} r112={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 662{534d,127u,1e} in 65{53 regular + 12 call} insns.
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 4 2 (set (reg/f:DI 117)
        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x775ee803f1b0 __stack_chk_guard>)) "Fibonacci.cpp":4:12 135 {*movdi_64bit}
     (nil))
(insn 4 3 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 65 frame)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.49567+0 S8 A64])
                (unspec:DI [
                        (mem/v/f/c:DI (reg/f:DI 117) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_FLE_QUIET))
            (set (scratch:DI)
                (const_int 0 [0]))
        ]) "Fibonacci.cpp":4:12 268 {stack_protect_set_di}
     (nil))
(insn 11 4 12 2 (set (reg/f:DI 94)
        (plus:DI (reg/f:DI 65 frame)
            (const_int -12 [0xfffffffffffffff4]))) "Fibonacci.cpp":10:12 4 {adddi3}
     (nil))
(insn 12 11 13 2 (set (reg:DI 11 a1)
        (reg/f:DI 94)) "Fibonacci.cpp":10:12 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 65 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0x775ee842b090 cin>)) "Fibonacci.cpp":10:12 135 {*movdi_64bit}
     (nil))
(call_insn 14 13 15 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>) [0 operator>> S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":10:12 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_UNUSED (reg:DI 10 a0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (nil))))
(insn 15 14 16 2 (set (reg:DI 11 a1)
        (const_int 0 [0])) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(insn 16 15 17 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(call_insn 17 16 20 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":11:13 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 20 17 21 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 11 a1)
        (const_int 1 [0x1])) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(insn 22 21 23 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(call_insn 23 22 26 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":12:13 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 26 23 29 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 29 26 31 2 (set (reg:DI 96 [ n ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 65 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(insn 31 29 32 2 (set (reg:DI 97 [ n ])
        (sign_extend:DI (subreg:SI (reg:DI 96 [ n ]) 0))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (expr_list:REG_DEAD (reg:DI 96 [ n ])
        (nil)))
(insn 32 31 33 2 (set (reg:DI 98)
        (const_int 1 [0x1])) "Fibonacci.cpp":13:14 135 {*movdi_64bit}
     (nil))
(jump_insn 33 32 106 2 (set (pc)
        (if_then_else (le (reg:DI 97 [ n ])
                (reg:DI 98))
            (label_ref 91)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_DEAD (reg:DI 97 [ n ])
            (int_list:REG_BR_PROB 118111604 (nil))))
 -> 91)
(note 106 33 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 106 6 3 (set (reg/v:DI 79 [ i ])
        (const_int 1 [0x1])) "Fibonacci.cpp":9:7 135 {*movdi_64bit}
     (nil))
(insn 6 5 7 3 (set (reg/v:DI 77 [ b ])
        (const_int 1 [0x1])) "Fibonacci.cpp":8:7 135 {*movdi_64bit}
     (nil))
(insn 7 6 39 3 (set (reg/v:DI 74 [ a ])
        (const_int 0 [0])) "Fibonacci.cpp":7:7 135 {*movdi_64bit}
     (nil))
(insn 39 7 66 3 (set (reg/f:DI 118)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 66 39 85 3 (set (reg/f:DI 119)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (nil))
(code_label 85 66 34 4 15 (nil) [1 uses])
(note 34 85 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg/v:DI 73 [ b ])
        (reg/v:DI 77 [ b ])) 135 {*movdi_64bit}
     (nil))
(insn 36 35 37 4 (set (reg:SI 99)
        (plus:SI (subreg/s/u:SI (reg/v:DI 77 [ b ]) 0)
            (subreg/s/u:SI (reg/v:DI 74 [ a ]) 0))) "Fibonacci.cpp":15:11 3 {addsi3}
     (expr_list:REG_DEAD (reg/v:DI 77 [ b ])
        (expr_list:REG_DEAD (reg/v:DI 74 [ a ])
            (nil))))
(insn 37 36 38 4 (set (reg/v:DI 77 [ b ])
        (sign_extend:DI (reg:SI 99))) "Fibonacci.cpp":15:11 90 {extendsidi2}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 38 37 117 4 (set (reg:DI 11 a1)
        (reg/v:DI 77 [ b ])) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 117 38 40 4 (set (reg:DI 10 a0)
        (reg/f:DI 118)) "Fibonacci.cpp":16:17 -1
     (nil))
(call_insn 40 117 41 4 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":16:17 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(insn 41 40 42 4 (set (reg/f:DI 78 [ _15 ])
        (reg:DI 10 a0)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(insn 42 41 43 4 (set (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
        (mem/f:DI (reg/f:DI 78 [ _15 ]) [2 _15->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(insn 43 42 44 4 (set (reg:DI 101 [ MEM[(long int *)_20 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_20 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
        (nil)))
(insn 44 43 45 4 (set (reg/f:DI 102)
        (plus:DI (reg/f:DI 78 [ _15 ])
            (reg:DI 101 [ MEM[(long int *)_20 + -24B] ]))) 4 {adddi3}
     (expr_list:REG_DEAD (reg:DI 101 [ MEM[(long int *)_20 + -24B] ])
        (nil)))
(insn 45 44 46 4 (set (reg/f:DI 85 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_23 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (ne (reg/f:DI 85 [ _27 ])
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 50)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 50 5 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(code_label 50 48 51 6 12 (nil) [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 54 6 (set (reg:DI 104 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 85 [ _27 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_27]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(insn 54 52 55 6 (set (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (zero_extend:DI (subreg:QI (reg:DI 104 [ MEM[(const struct ctype *)_27]._M_widen_ok ]) 0))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:DI 104 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (nil)))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 60)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 7 (set (reg:DI 87 [ _32 ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 85 [ _27 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_27]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _27 ])
        (nil)))
      ; pc falls through to BB 10
(code_label 60 57 61 8 13 (nil) [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:DI 10 a0)
        (reg/f:DI 85 [ _27 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 63 62 64 8 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 64 63 65 8 (set (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
        (mem/f:DI (reg/f:DI 85 [ _27 ]) [2 MEM[(const struct ctype *)_27].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 65 64 119 8 (set (reg/f:DI 89 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_35 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
        (nil)))
(insn 119 65 67 8 (set (reg:DI 87 [ _32 ])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(jump_insn 67 119 68 8 (set (pc)
        (if_then_else (eq (reg/f:DI 89 [ _36 ])
                (reg/f:DI 119))
            (label_ref:DI 74)
            (pc))) 182 {*branchdi}
     (int_list:REG_BR_PROB 858993460 (nil))
 -> 74)
(note 68 67 120 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 120 68 70 9 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 70 120 71 9 (set (reg:DI 10 a0)
        (reg/f:DI 85 [ _27 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _27 ])
        (nil)))
(call_insn 71 70 72 9 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 89 [ _36 ]) [0 *OBJ_TYPE_REF(_36;_27->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _36 ])
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 72 71 74 9 (set (reg:DI 87 [ _32 ])
        (reg:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(code_label 74 72 75 10 14 (nil) [1 uses])
(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (set (reg:DI 11 a1)
        (reg:DI 87 [ _32 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 87 [ _32 ])
        (nil)))
(insn 77 76 78 10 (set (reg:DI 10 a0)
        (reg/f:DI 78 [ _15 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 78 [ _15 ])
        (nil)))
(call_insn 78 77 81 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn 81 78 82 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 254 {call_value_internal}
     (expr_list:REG_UNUSED (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 82 81 83 10 (set (reg:SI 109)
        (plus:SI (subreg/s/u:SI (reg/v:DI 79 [ i ]) 0)
            (const_int 1 [0x1]))) "Fibonacci.cpp":18:11 3 {addsi3}
     (expr_list:REG_DEAD (reg/v:DI 79 [ i ])
        (nil)))
(insn 83 82 84 10 (set (reg/v:DI 79 [ i ])
        (sign_extend:DI (reg:SI 109))) "Fibonacci.cpp":18:11 90 {extendsidi2}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(insn 84 83 86 10 (set (reg/v:DI 74 [ a ])
        (reg/v:DI 73 [ b ])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/v:DI 73 [ b ])
        (nil)))
(insn 86 84 88 10 (set (reg:DI 111 [ n ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 65 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(insn 88 86 90 10 (set (reg:DI 112 [ n ])
        (sign_extend:DI (subreg:SI (reg:DI 111 [ n ]) 0))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (expr_list:REG_DEAD (reg:DI 111 [ n ])
        (nil)))
(jump_insn 90 88 91 10 (set (pc)
        (if_then_else (gt (reg:DI 112 [ n ])
                (reg/v:DI 79 [ i ]))
            (label_ref:DI 85)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 112 [ n ])
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 85)
(code_label 91 90 92 11 11 (nil) [1 uses])
(note 92 91 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 98 92 99 11 (parallel [
            (set (reg:DI 116)
                (unspec:DI [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 65 frame)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.49567+0 S8 A64])
                        (mem/v/f/c:DI (reg/f:DI 117) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_COPYSIGN))
            (clobber (scratch:DI))
        ]) "Fibonacci.cpp":20:1 270 {stack_protect_test_di}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(jump_insn 99 98 111 11 (set (pc)
        (if_then_else (eq (reg:DI 116)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "Fibonacci.cpp":20:1 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 116)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 102)
(note 111 99 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 100 111 102 12 (parallel [
            (call (mem:SI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>) [0 __stack_chk_fail S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":20:1 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(code_label 102 100 112 13 16 (nil) [1 uses])
(note 112 102 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 112 104 13 (set (reg/i:DI 10 a0)
        (const_int 0 [0])) "Fibonacci.cpp":20:1 135 {*movdi_64bit}
     (nil))
(insn 104 103 0 13 (use (reg/i:DI 10 a0)) "Fibonacci.cpp":20:1 -1
     (nil))

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2295, decl_uid=49420, cgraph_uid=1029, symbol_order=1204) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2]
;;  ref usage 	r0={2d} r1={2d,1u} r2={1d,4u} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={1d,2u} r10={5d,2u} r11={4d,1u} r12={4d,1u} r13={3d} r14={3d} r15={3d} r16={3d} r17={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,1u} r65={1d,2u} r72={1d,2u} 
;;    total ref usage 119{103d,16u,0e} in 7{5 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,4] 3[5,6] 4[7,8] 5[9,10] 6[11,12] 7[13,14] 8[15,15] 10[16,20] 11[21,24] 12[25,28] 13[29,31] 14[32,34] 15[35,37] 16[38,40] 17[41,43] 28[44,45] 29[46,47] 30[48,49] 31[50,51] 32[52,53] 33[54,55] 34[56,57] 35[58,59] 36[60,61] 37[62,63] 38[64,65] 39[66,67] 42[68,70] 43[71,73] 44[74,76] 45[77,79] 46[80,82] 47[83,85] 48[86,88] 49[89,91] 60[92,93] 61[94,95] 62[96,97] 63[98,99] 64[100,100] 65[101,101] 72[102,102] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(1){ }d4(2){ }d15(8){ }d20(10){ }d24(11){ }d28(12){ }d31(13){ }d34(14){ }d37(15){ }d40(16){ }d43(17){ }d70(42){ }d73(43){ }d76(44){ }d79(45){ }d82(46){ }d85(47){ }d88(48){ }d91(49){ }d100(64){ }d101(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(21) 1[3],2[4],8[15],10[20],11[24],12[28],13[31],14[34],15[37],16[40],17[43],42[70],43[73],44[76],45[79],46[82],47[85],48[88],49[91],64[100],65[101]
;; rd  kill	(58) 1[2,3],2[4],8[15],10[16,17,18,19,20],11[21,22,23,24],12[25,26,27,28],13[29,30,31],14[32,33,34],15[35,36,37],16[38,39,40],17[41,42,43],42[68,69,70],43[71,72,73],44[74,75,76],45[77,78,79],46[80,81,82],47[83,84,85],48[86,87,88],49[89,90,91],64[100],65[101]
;;  UD chains for artificial uses at top
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; rd  out 	(4) 2[4],8[15],64[100],65[101]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ d4(bb 0 insn -1) }u-1(8){ d15(bb 0 insn -1) }u-1(64){ d100(bb 0 insn -1) }u-1(65){ d101(bb 0 insn -1) }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 72
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0] 11 [a1] 12 [a2] 72
;; live  kill	 1 [ra]
;; rd  in  	(4) 2[4],8[15],64[100],65[101]
;; rd  gen 	(2) 10[16],72[102]
;; rd  kill	(8) 1[2,3],10[16,17,18,19,20],72[102]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; rd  out 	(4) 2[4],8[15],64[100],65[101]
;;  UD chains for artificial uses at bottom
;;   reg 2 { d4(bb 0 insn -1) }
;;   reg 8 { d15(bb 0 insn -1) }
;;   reg 64 { d100(bb 0 insn -1) }
;;   reg 65 { d101(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ d4(bb 0 insn -1) }u-1(8){ d15(bb 0 insn -1) }u-1(65){ d101(bb 0 insn -1) }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  def 	
;; live  in  	 2 [sp] 8 [s0] 65 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 2[4],8[15],64[100],65[101]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 1 { }
;;   reg 2 { d4(bb 0 insn -1) }
;;   reg 8 { d15(bb 0 insn -1) }
;;   reg 65 { d101(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 2 sp) in insn 7:
Processing use of (reg 10 a0) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 72) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 2 sp) in insn 12:
Processing use of (reg 10 a0) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 11 a1) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 12 a2) in insn 12:
  Adding insn 9 to worklist
Processing use of (reg 72) in insn 10:
starting the processing of deferred insns
ending the processing of deferred insns


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2]
;;  ref usage 	r0={2d} r1={2d,1u} r2={1d,4u} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={1d,2u} r10={5d,2u} r11={4d,1u} r12={4d,1u} r13={3d} r14={3d} r15={3d} r16={3d} r17={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,1u} r65={1d,2u} r72={1d,2u} 
;;    total ref usage 119{103d,16u,0e} in 7{5 regular + 2 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 72)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(insn 6 5 7 2 (set (reg:DI 10 a0)
        (reg/f:DI 72)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(call_insn 7 6 9 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >) [0 __ct_comp  S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 9 7 10 2 (set (reg:DI 12 a2)
        (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0x775ee7f332d0 __dso_handle>)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(insn 10 9 11 2 (set (reg:DI 11 a1)
        (reg/f:DI 72)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 11 10 12 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x775ee8af8700 __dt_comp >)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(call_insn/j 12 11 0 2 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>) [0 __cxa_atexit S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 252 {sibcall_value_internal}
     (expr_list:REG_DEAD (reg:DI 12 a2)
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_UNUSED (reg:DI 10 a0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (expr_list:DI (use (reg:DI 12 a2))
                (nil)))))
