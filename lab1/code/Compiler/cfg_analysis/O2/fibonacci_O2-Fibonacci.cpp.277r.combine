
;; Function std::ctype<char>::do_widen (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=1561, decl_uid=37570, cgraph_uid=532, symbol_order=561)

scanning new insn with uid = 14.
rescanning insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


std::ctype<char>::do_widen

Dataflow summary:
def_info->table_size = 23, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={2d,2u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r74={1d,1u} r76={1d,1u} 
;;    total ref usage 37{24d,13u,0e} in 4{4 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(1){ }d1(2){ }d2(8){ }d4(10){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(15){ }d10(16){ }d11(17){ }d12(42){ }d13(43){ }d14(44){ }d15(45){ }d16(46){ }d17(47){ }d18(48){ }d19(49){ }d20(64){ }d21(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; lr  def 	 10 [a0] 74 76
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 11 [a1] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0] 74
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ }u-1(8){ }u-1(10){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  def 	
;; live  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 12 to worklist
Finished finding needed instructions:
processing block 2 lr out =  1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
  Adding insn 11 to worklist
  Adding insn 3 to worklist
  Adding insn 14 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 4 for    14: r76:DI=a1:DI
      REG_DEAD a1:DI
insn_cost 4 for     3: r74:DI=r76:DI
      REG_DEAD r76:DI
insn_cost 4 for    11: a0:DI=r74:DI
      REG_DEAD r74:DI
insn_cost 0 for    12: use a0:DI
allowing combination of insns 3 and 11
original costs 4 + 4 = 8
replacement cost 4
deferring deletion of insn with uid = 3.
modifying insn i3    11: a0:DI=r76:DI
      REG_DEAD r76:DI
deferring rescan insn with uid = 11.
starting the processing of deferred insns
rescanning insn with uid = 11.
ending the processing of deferred insns


std::ctype<char>::do_widen

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={2d,2u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r76={1d,1u} 
;;    total ref usage 35{23d,12u,0e} in 3{3 regular + 0 call} insns.
(note 5 0 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 14 5 3 2 (set (reg:DI 76)
        (reg:DI 11 a1 [ __c ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1087:7 -1
     (expr_list:REG_DEAD (reg:DI 11 a1 [ __c ])
        (nil)))
(note 3 14 4 2 NOTE_INSN_DELETED)
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg/i:DI 10 a0)
        (reg:DI 76)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 76)
        (nil)))
(insn 12 11 0 2 (use (reg/i:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 -1
     (nil))

;; Function std::endl.isra (_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, funcdef_no=2298, decl_uid=49501, cgraph_uid=1045, symbol_order=1223)

scanning new insn with uid = 56.
rescanning insn with uid = 2.
scanning new insn with uid = 57.
rescanning insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)


std::endl.isra

Dataflow summary:
def_info->table_size = 233, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={5d} r1={5d,1u} r2={1d,13u} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={1d,8u} r10={9d,6u} r11={8d,2u} r12={6d} r13={6d} r14={6d} r15={6d} r16={6d} r17={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,7u} r65={1d,8u} r77={1d,6u} r79={3d,1u} r81={1d,2u} r83={1d,3u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 301{235d,66u,0e} in 28{23 regular + 5 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(1){ }d10(2){ }d36(8){ }d45(10){ }d53(11){ }d59(12){ }d65(13){ }d71(14){ }d77(15){ }d83(16){ }d89(17){ }d155(42){ }d161(43){ }d167(44){ }d173(45){ }d179(46){ }d185(47){ }d191(48){ }d197(49){ }d218(64){ }d219(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; lr  def 	 77 83 84 85 86 93
;; live  in  	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  gen 	 77 83 84 85 86
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 88 89
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 88 89
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 79
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 79
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83

( 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 79 81 90 91
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 10 [a0] 79 81 90 91
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 79 94
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81 83
;; live  gen 	 10 [a0] 11 [a1] 79
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83

( 5 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  gen 	 10 [a0] 11 [a1]
;; live  kill	 1 [ra]
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ }u-1(8){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  def 	
;; live  in  	 2 [sp] 8 [s0] 65 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 13 to worklist
  Adding insn 20 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 36 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
Finished finding needed instructions:
processing block 3 lr out =  2 [sp] 64 [arg] 65 [frame]
processing block 8 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 5 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
  Adding insn 22 to worklist
processing block 7 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
  Adding insn 37 to worklist
  Adding insn 57 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
processing block 6 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83
  Adding insn 4 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
processing block 4 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
  Adding insn 19 to worklist
  Adding insn 17 to worklist
processing block 2 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
  Adding insn 56 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
insn_cost 4 for    56: r93:DI=a0:DI
      REG_DEAD a0:DI
insn_cost 4 for     2: r83:DI=r93:DI
      REG_DEAD r93:DI
insn_cost 28 for     7: r84:DI=[r83:DI]
insn_cost 28 for     8: r85:DI=[r84:DI-0x18]
      REG_DEAD r84:DI
insn_cost 4 for     9: r86:DI=r83:DI+r85:DI
      REG_DEAD r85:DI
insn_cost 28 for    10: r77:DI=[r86:DI+0xf0]
      REG_DEAD r86:DI
insn_cost 16 for    11: pc={(r77:DI!=0)?L15:pc}
      REG_BR_PROB 1073312332
insn_cost 0 for    13: call [`_ZSt16__throw_bad_castv'] argc:0
      REG_CALL_DECL `_ZSt16__throw_bad_castv'
      REG_NORETURN 0
insn_cost 28 for    17: r88:DI=zero_extend([r77:DI+0x38])
insn_cost 4 for    19: r89:DI=zero_extend(r88:DI#0)
      REG_DEAD r88:DI
insn_cost 16 for    20: pc={(r89:DI==0)?L25:pc}
      REG_DEAD r89:DI
      REG_BR_PROB 524845004
insn_cost 28 for    22: r79:DI=zero_extend([r77:DI+0x43])
      REG_DEAD r77:DI
insn_cost 4 for    27: a0:DI=r77:DI
insn_cost 0 for    28: call [`_ZNKSt5ctypeIcE13_M_widen_initEv'] argc:0
      REG_DEAD a0:DI
      REG_CALL_DECL `_ZNKSt5ctypeIcE13_M_widen_initEv'
insn_cost 28 for    29: r90:DI=[r77:DI]
insn_cost 28 for    30: r81:DI=[r90:DI+0x30]
      REG_DEAD r90:DI
insn_cost 4 for    31: r91:DI=`_ZNKSt5ctypeIcE8do_widenEc'
insn_cost 4 for     4: r79:DI=0xa
insn_cost 16 for    32: pc={(r81:DI==r91:DI)?L39:pc}
      REG_DEAD r91:DI
      REG_BR_PROB 858993460
insn_cost 4 for    34: a1:DI=0xa
insn_cost 4 for    35: a0:DI=r77:DI
      REG_DEAD r77:DI
insn_cost 32 for    36: a0:DI=call [r81:DI] argc:0
      REG_DEAD r81:DI
      REG_DEAD a1:DI
      REG_CALL_DECL (nil)
insn_cost 4 for    57: r94:DI=a0:DI
      REG_DEAD a0:DI
insn_cost 4 for    37: r79:DI=r94:DI
      REG_DEAD r94:DI
insn_cost 4 for    41: a1:DI=r79:DI
      REG_DEAD r79:DI
insn_cost 4 for    42: a0:DI=r83:DI
      REG_DEAD r83:DI
insn_cost 36 for    43: a0:DI=call [`_ZNSo3putEc'] argc:0
      REG_DEAD a1:DI
      REG_CALL_DECL `_ZNSo3putEc'
insn_cost 36 for    46: a0:DI=call [`_ZNSo5flushEv'] argc:0
      REG_UNUSED a0:DI
      REG_CALL_DECL `_ZNSo5flushEv'
allowing combination of insns 17 and 19
original costs 28 + 4 = 32
replacement cost 28
deferring deletion of insn with uid = 17.
modifying insn i3    19: r89:DI=zero_extend([r77:DI+0x38])
deferring rescan insn with uid = 19.
starting the processing of deferred insns
rescanning insn with uid = 19.
ending the processing of deferred insns


std::endl.isra

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={5d} r1={5d,1u} r2={1d,13u} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={1d,8u} r10={9d,6u} r11={8d,2u} r12={6d} r13={6d} r14={6d} r15={6d} r16={6d} r17={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,7u} r65={1d,8u} r77={1d,6u} r79={3d,1u} r81={1d,2u} r83={1d,3u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 299{234d,65u,0e} in 27{22 regular + 5 call} insns.
(note 5 0 56 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 56 5 2 2 (set (reg:DI 93)
        (reg:DI 10 a0 [ __os ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":684:5 -1
     (expr_list:REG_DEAD (reg:DI 10 a0 [ __os ])
        (nil)))
(insn 2 56 3 2 (set (reg/v/f:DI 83 [ __os ])
        (reg:DI 93)) "/usr/riscv64-linux-gnu/include/c++/11/ostream":684:5 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
        (mem/f:DI (reg/v/f:DI 83 [ __os ]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(insn 8 7 9 2 (set (reg:DI 85 [ MEM[(long int *)_2 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_2 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 86)
        (plus:DI (reg/v/f:DI 83 [ __os ])
            (reg:DI 85 [ MEM[(long int *)_2 + -24B] ]))) 4 {adddi3}
     (expr_list:REG_DEAD (reg:DI 85 [ MEM[(long int *)_2 + -24B] ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 77 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 86)
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_5 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg/f:DI 77 [ _13 ])
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 15)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 15 3 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(code_label 15 13 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 17 16 19 4 NOTE_INSN_DELETED)
(insn 19 17 20 4 (set (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 77 [ _13 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_13]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 25)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 25 5 (set (reg:DI 79 [ _18 ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 77 [ _13 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_13]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg/f:DI 77 [ _13 ])
        (nil)))
      ; pc falls through to BB 8
(code_label 25 22 26 6 5 (nil) [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 10 a0)
        (reg/f:DI 77 [ _13 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 28 27 29 6 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 29 28 30 6 (set (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
        (mem/f:DI (reg/f:DI 77 [ _13 ]) [2 MEM[(const struct ctype *)_13].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 30 29 31 6 (set (reg/f:DI 81 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_21 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
        (nil)))
(insn 31 30 4 6 (set (reg/f:DI 91)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (nil))
(insn 4 31 32 6 (set (reg:DI 79 [ _18 ])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(jump_insn 32 4 33 6 (set (pc)
        (if_then_else (eq (reg/f:DI 81 [ _22 ])
                (reg/f:DI 91))
            (label_ref:DI 39)
            (pc))) 182 {*branchdi}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 39)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 35 34 36 7 (set (reg:DI 10 a0)
        (reg/f:DI 77 [ _13 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 77 [ _13 ])
        (nil)))
(call_insn 36 35 57 7 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 81 [ _22 ]) [0 *OBJ_TYPE_REF(_22;_13->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_DEAD (reg/f:DI 81 [ _22 ])
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 57 36 37 7 (set (reg:DI 94)
        (reg:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 -1
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(insn 37 57 39 7 (set (reg:DI 79 [ _18 ])
        (reg:DI 94)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(code_label 39 37 40 8 6 (nil) [1 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg:DI 11 a1)
        (reg:DI 79 [ _18 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 79 [ _18 ])
        (nil)))
(insn 42 41 43 8 (set (reg:DI 10 a0)
        (reg/v/f:DI 83 [ __os ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/v/f:DI 83 [ __os ])
        (nil)))
(call_insn 43 42 46 8 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn/j 46 43 0 8 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 252 {sibcall_value_internal}
     (expr_list:REG_UNUSED (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))

;; Function main (main, funcdef_no=1808, decl_uid=44612, cgraph_uid=542, symbol_order=572) (executed once)

scanning new insn with uid = 121.
rescanning insn with uid = 41.
scanning new insn with uid = 122.
rescanning insn with uid = 72.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 19 (  1.4)


main

Dataflow summary:
def_info->table_size = 534, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={12d} r1={13d,1u} r2={1d,25u} r3={12d} r4={12d} r5={12d} r6={12d} r7={12d} r8={1d,13u} r10={21d,14u} r11={19d,6u} r12={13d} r13={13d} r14={13d} r15={13d} r16={13d} r17={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r60={12d} r61={12d} r62={12d} r63={12d} r64={1d,12u} r65={1d,18u,1e} r73={1d,1u} r74={2d,1u} r77={2d,3u} r78={1d,3u} r79={2d,2u} r85={1d,6u} r87={3d,1u} r89={1d,2u} r94={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r109={1d,1u} r111={1d,1u} r112={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} r121={1d,1u} r122={1d,1u} 
;;    total ref usage 666{536d,129u,1e} in 67{55 regular + 12 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d24(1){ }d25(2){ }d86(8){ }d107(10){ }d126(11){ }d139(12){ }d152(13){ }d165(14){ }d178(15){ }d191(16){ }d204(17){ }d361(42){ }d374(43){ }d387(44){ }d400(45){ }d413(46){ }d426(47){ }d439(48){ }d452(49){ }d501(64){ }d502(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]

( 0 )->[2]->( 3 11 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 94 96 97 98 117
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0] 11 [a1] 94 96 97 98 117
;; live  kill	 1 [ra]
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 74 77 79 118 119
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  gen 	 74 77 79 118 119
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119

( 10 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 118
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 73 77 78 85 99 100 101 102 121
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 73 77 78 85 99 100 101 102
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119

( 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85
;; lr  def 	 104 105
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 104 105
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119

( 6 )->[7]->( 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85
;; lr  def 	 87
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 87
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119

( 6 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85 119
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 87 89 106
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 10 [a0] 87 89 106
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 89 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85 89
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 87 122
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 89 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 87
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119

( 7 8 9 )->[10]->( 4 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 78 79 87
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 74 79 109 111 112
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 74 79 109 111 112
;; live  kill	 1 [ra]
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119

( 2 10 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  def 	 116
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  gen 	 116
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]

( 11 )->[12]->( )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]

( 11 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 10 [a0]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0]
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ }u-1(8){ }u-1(10){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  def 	
;; live  in  	 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 33 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 4 to worklist
  Adding insn 46 to worklist
  Adding insn 40 to worklist
  Adding insn 48 to worklist
  Adding insn 55 to worklist
  Adding insn 67 to worklist
  Adding insn 63 to worklist
  Adding insn 71 to worklist
  Adding insn 90 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 100 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
processing block 5 lr out =  2 [sp] 64 [arg] 65 [frame]
processing block 13 lr out =  1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
  Adding insn 103 to worklist
processing block 12 lr out =  2 [sp] 64 [arg] 65 [frame]
processing block 11 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
processing block 10 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
processing block 7 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
  Adding insn 57 to worklist
processing block 9 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
  Adding insn 72 to worklist
  Adding insn 122 to worklist
  Adding insn 70 to worklist
  Adding insn 120 to worklist
processing block 8 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119
  Adding insn 119 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 62 to worklist
processing block 6 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
  Adding insn 54 to worklist
  Adding insn 52 to worklist
processing block 4 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 121 to worklist
  Adding insn 117 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 3 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
  Adding insn 66 to worklist
  Adding insn 39 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
processing block 2 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 15 (  1.1)
insn_cost 4 for     3: r117:DI=`__stack_chk_guard'
insn_cost 0 for     4: {[frame:DI-0x8]=unspec[[r117:DI]] 10;scratch=0;}
insn_cost 4 for    11: r94:DI=frame:DI-0xc
insn_cost 4 for    12: a1:DI=r94:DI
      REG_DEAD r94:DI
      REG_EQUAL frame:DI-0xc
insn_cost 4 for    13: a0:DI=`_ZSt3cin'
insn_cost 36 for    14: a0:DI=call [`_ZNSirsERi'] argc:0
      REG_DEAD a1:DI
      REG_UNUSED a0:DI
      REG_CALL_DECL `_ZNSirsERi'
insn_cost 4 for    15: a1:DI=0
insn_cost 4 for    16: a0:DI=`_ZSt4cout'
insn_cost 36 for    17: a0:DI=call [`_ZNSolsEi'] argc:0
      REG_DEAD a1:DI
      REG_CALL_DECL `_ZNSolsEi'
insn_cost 0 for    20: call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'] argc:0
      REG_DEAD a0:DI
      REG_CALL_DECL `_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'
insn_cost 4 for    21: a1:DI=0x1
insn_cost 4 for    22: a0:DI=`_ZSt4cout'
insn_cost 36 for    23: a0:DI=call [`_ZNSolsEi'] argc:0
      REG_DEAD a1:DI
      REG_CALL_DECL `_ZNSolsEi'
insn_cost 0 for    26: call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'] argc:0
      REG_DEAD a0:DI
      REG_CALL_DECL `_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'
insn_cost 28 for    29: r96:DI=sign_extend([frame:DI-0xc])
insn_cost 4 for    31: r97:DI=sign_extend(r96:DI#0)
      REG_DEAD r96:DI
insn_cost 4 for    32: r98:DI=0x1
insn_cost 16 for    33: pc={(r97:DI<=r98:DI)?L91:pc}
      REG_DEAD r98:DI
      REG_DEAD r97:DI
      REG_BR_PROB 118111604
insn_cost 4 for     5: r79:DI=0x1
insn_cost 4 for     6: r77:DI=0x1
insn_cost 4 for     7: r74:DI=0
insn_cost 4 for    39: r118:DI=`_ZSt4cout'
insn_cost 4 for    66: r119:DI=`_ZNKSt5ctypeIcE8do_widenEc'
insn_cost 4 for    35: r73:DI=r77:DI
insn_cost 4 for    36: r99:SI=r77:DI#0+r74:DI#0
      REG_DEAD r77:DI
      REG_DEAD r74:DI
insn_cost 4 for    37: r77:DI=sign_extend(r99:SI)
      REG_DEAD r99:SI
insn_cost 4 for    38: a1:DI=r77:DI
insn_cost 4 for   117: a0:DI=r118:DI
insn_cost 36 for    40: a0:DI=call [`_ZNSolsEi'] argc:0
      REG_DEAD a1:DI
      REG_CALL_DECL `_ZNSolsEi'
insn_cost 4 for   121: r121:DI=a0:DI
      REG_DEAD a0:DI
insn_cost 4 for    41: r78:DI=r121:DI
      REG_DEAD r121:DI
insn_cost 28 for    42: r100:DI=[r78:DI]
insn_cost 28 for    43: r101:DI=[r100:DI-0x18]
      REG_DEAD r100:DI
insn_cost 4 for    44: r102:DI=r78:DI+r101:DI
      REG_DEAD r101:DI
insn_cost 28 for    45: r85:DI=[r102:DI+0xf0]
      REG_DEAD r102:DI
insn_cost 16 for    46: pc={(r85:DI!=0)?L50:pc}
      REG_BR_PROB 1073312332
insn_cost 0 for    48: call [`_ZSt16__throw_bad_castv'] argc:0
      REG_CALL_DECL `_ZSt16__throw_bad_castv'
      REG_NORETURN 0
insn_cost 28 for    52: r104:DI=zero_extend([r85:DI+0x38])
insn_cost 4 for    54: r105:DI=zero_extend(r104:DI#0)
      REG_DEAD r104:DI
insn_cost 16 for    55: pc={(r105:DI==0)?L60:pc}
      REG_DEAD r105:DI
      REG_BR_PROB 524845004
insn_cost 28 for    57: r87:DI=zero_extend([r85:DI+0x43])
      REG_DEAD r85:DI
insn_cost 4 for    62: a0:DI=r85:DI
insn_cost 0 for    63: call [`_ZNKSt5ctypeIcE13_M_widen_initEv'] argc:0
      REG_DEAD a0:DI
      REG_CALL_DECL `_ZNKSt5ctypeIcE13_M_widen_initEv'
insn_cost 28 for    64: r106:DI=[r85:DI]
insn_cost 28 for    65: r89:DI=[r106:DI+0x30]
      REG_DEAD r106:DI
insn_cost 4 for   119: r87:DI=0xa
insn_cost 16 for    67: pc={(r89:DI==r119:DI)?L74:pc}
      REG_BR_PROB 858993460
insn_cost 4 for   120: a1:DI=0xa
insn_cost 4 for    70: a0:DI=r85:DI
      REG_DEAD r85:DI
insn_cost 32 for    71: a0:DI=call [r89:DI] argc:0
      REG_DEAD r89:DI
      REG_DEAD a1:DI
      REG_CALL_DECL (nil)
insn_cost 4 for   122: r122:DI=a0:DI
      REG_DEAD a0:DI
insn_cost 4 for    72: r87:DI=r122:DI
      REG_DEAD r122:DI
insn_cost 4 for    76: a1:DI=r87:DI
      REG_DEAD r87:DI
insn_cost 4 for    77: a0:DI=r78:DI
      REG_DEAD r78:DI
insn_cost 36 for    78: a0:DI=call [`_ZNSo3putEc'] argc:0
      REG_DEAD a1:DI
      REG_CALL_DECL `_ZNSo3putEc'
insn_cost 36 for    81: a0:DI=call [`_ZNSo5flushEv'] argc:0
      REG_UNUSED a0:DI
      REG_CALL_DECL `_ZNSo5flushEv'
insn_cost 4 for    82: r109:SI=r79:DI#0+0x1
      REG_DEAD r79:DI
insn_cost 4 for    83: r79:DI=sign_extend(r109:SI)
      REG_DEAD r109:SI
insn_cost 4 for    84: r74:DI=r73:DI
      REG_DEAD r73:DI
insn_cost 28 for    86: r111:DI=sign_extend([frame:DI-0xc])
insn_cost 4 for    88: r112:DI=sign_extend(r111:DI#0)
      REG_DEAD r111:DI
insn_cost 16 for    90: pc={(r112:DI>r79:DI)?L85:pc}
      REG_DEAD r112:DI
      REG_BR_PROB 955630228
insn_cost 60 for    98: {r116:DI=unspec[[frame:DI-0x8],[r117:DI]] 11;clobber scratch;}
      REG_DEAD r117:DI
insn_cost 16 for    99: pc={(r116:DI==0)?L102:pc}
      REG_DEAD r116:DI
      REG_BR_PROB 1073312332
insn_cost 0 for   100: call [`__stack_chk_fail'] argc:0
      REG_CALL_DECL `__stack_chk_fail'
      REG_NORETURN 0
      REG_EH_REGION 0
insn_cost 4 for   103: a0:DI=0
insn_cost 0 for   104: use a0:DI
allowing combination of insns 11 and 12
original costs 4 + 4 = 8
replacement cost 4
deferring deletion of insn with uid = 11.
modifying insn i3    12: a1:DI=frame:DI-0xc
deferring rescan insn with uid = 12.
allowing combination of insns 29 and 31
original costs 28 + 4 = 32
replacement cost 28
deferring deletion of insn with uid = 29.
modifying insn i3    31: r97:DI=sign_extend([frame:DI-0xc])
deferring rescan insn with uid = 31.
allowing combination of insns 36 and 37
original costs 4 + 4 = 8
replacement cost 8
deferring deletion of insn with uid = 36.
modifying insn i3    37: r77:DI=sign_extend(r77:DI#0+r74:DI#0)
      REG_DEAD r74:DI
deferring rescan insn with uid = 37.
allowing combination of insns 52 and 54
original costs 28 + 4 = 32
replacement cost 28
deferring deletion of insn with uid = 52.
modifying insn i3    54: r105:DI=zero_extend([r85:DI+0x38])
deferring rescan insn with uid = 54.
allowing combination of insns 82 and 83
original costs 4 + 4 = 8
replacement cost 8
deferring deletion of insn with uid = 82.
modifying insn i3    83: r79:DI=sign_extend(r79:DI#0+0x1)
deferring rescan insn with uid = 83.
allowing combination of insns 86 and 88
original costs 28 + 4 = 32
replacement cost 28
deferring deletion of insn with uid = 86.
modifying insn i3    88: r112:DI=sign_extend([frame:DI-0xc])
deferring rescan insn with uid = 88.
starting the processing of deferred insns
rescanning insn with uid = 12.
rescanning insn with uid = 31.
rescanning insn with uid = 37.
rescanning insn with uid = 54.
rescanning insn with uid = 83.
rescanning insn with uid = 88.
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={12d} r1={13d,1u} r2={1d,25u} r3={12d} r4={12d} r5={12d} r6={12d} r7={12d} r8={1d,13u} r10={21d,14u} r11={19d,6u} r12={13d} r13={13d} r14={13d} r15={13d} r16={13d} r17={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r60={12d} r61={12d} r62={12d} r63={12d} r64={1d,12u} r65={1d,18u} r73={1d,1u} r74={2d,1u} r77={2d,3u} r78={1d,3u} r79={2d,2u} r85={1d,6u} r87={3d,1u} r89={1d,2u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r105={1d,1u} r106={1d,1u} r112={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} r121={1d,1u} r122={1d,1u} 
;;    total ref usage 653{530d,123u,0e} in 61{49 regular + 12 call} insns.
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 4 2 (set (reg/f:DI 117)
        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x775ee803f1b0 __stack_chk_guard>)) "Fibonacci.cpp":4:12 135 {*movdi_64bit}
     (nil))
(insn 4 3 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 65 frame)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.49567+0 S8 A64])
                (unspec:DI [
                        (mem/v/f/c:DI (reg/f:DI 117) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_FLE_QUIET))
            (set (scratch:DI)
                (const_int 0 [0]))
        ]) "Fibonacci.cpp":4:12 268 {stack_protect_set_di}
     (nil))
(note 11 4 12 2 NOTE_INSN_DELETED)
(insn 12 11 13 2 (set (reg:DI 11 a1)
        (plus:DI (reg/f:DI 65 frame)
            (const_int -12 [0xfffffffffffffff4]))) "Fibonacci.cpp":10:12 4 {adddi3}
     (nil))
(insn 13 12 14 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0x775ee842b090 cin>)) "Fibonacci.cpp":10:12 135 {*movdi_64bit}
     (nil))
(call_insn 14 13 15 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>) [0 operator>> S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":10:12 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_UNUSED (reg:DI 10 a0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (nil))))
(insn 15 14 16 2 (set (reg:DI 11 a1)
        (const_int 0 [0])) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(insn 16 15 17 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(call_insn 17 16 20 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":11:13 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 20 17 21 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 11 a1)
        (const_int 1 [0x1])) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(insn 22 21 23 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(call_insn 23 22 26 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":12:13 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 26 23 29 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(note 29 26 31 2 NOTE_INSN_DELETED)
(insn 31 29 32 2 (set (reg:DI 97 [ n ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 65 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(insn 32 31 33 2 (set (reg:DI 98)
        (const_int 1 [0x1])) "Fibonacci.cpp":13:14 135 {*movdi_64bit}
     (nil))
(jump_insn 33 32 106 2 (set (pc)
        (if_then_else (le (reg:DI 97 [ n ])
                (reg:DI 98))
            (label_ref 91)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_DEAD (reg:DI 97 [ n ])
            (int_list:REG_BR_PROB 118111604 (nil))))
 -> 91)
(note 106 33 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 106 6 3 (set (reg/v:DI 79 [ i ])
        (const_int 1 [0x1])) "Fibonacci.cpp":9:7 135 {*movdi_64bit}
     (nil))
(insn 6 5 7 3 (set (reg/v:DI 77 [ b ])
        (const_int 1 [0x1])) "Fibonacci.cpp":8:7 135 {*movdi_64bit}
     (nil))
(insn 7 6 39 3 (set (reg/v:DI 74 [ a ])
        (const_int 0 [0])) "Fibonacci.cpp":7:7 135 {*movdi_64bit}
     (nil))
(insn 39 7 66 3 (set (reg/f:DI 118)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 66 39 85 3 (set (reg/f:DI 119)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (nil))
(code_label 85 66 34 4 15 (nil) [1 uses])
(note 34 85 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg/v:DI 73 [ b ])
        (reg/v:DI 77 [ b ])) 135 {*movdi_64bit}
     (nil))
(note 36 35 37 4 NOTE_INSN_DELETED)
(insn 37 36 38 4 (set (reg/v:DI 77 [ b ])
        (sign_extend:DI (plus:SI (subreg:SI (reg/v:DI 77 [ b ]) 0)
                (subreg:SI (reg/v:DI 74 [ a ]) 0)))) "Fibonacci.cpp":15:11 5 {*addsi3_extended}
     (expr_list:REG_DEAD (reg/v:DI 74 [ a ])
        (nil)))
(insn 38 37 117 4 (set (reg:DI 11 a1)
        (reg/v:DI 77 [ b ])) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 117 38 40 4 (set (reg:DI 10 a0)
        (reg/f:DI 118)) "Fibonacci.cpp":16:17 -1
     (nil))
(call_insn 40 117 121 4 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":16:17 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(insn 121 40 41 4 (set (reg:DI 121)
        (reg:DI 10 a0)) "Fibonacci.cpp":16:17 -1
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(insn 41 121 42 4 (set (reg/f:DI 78 [ _15 ])
        (reg:DI 121)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 42 41 43 4 (set (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
        (mem/f:DI (reg/f:DI 78 [ _15 ]) [2 _15->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(insn 43 42 44 4 (set (reg:DI 101 [ MEM[(long int *)_20 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_20 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
        (nil)))
(insn 44 43 45 4 (set (reg/f:DI 102)
        (plus:DI (reg/f:DI 78 [ _15 ])
            (reg:DI 101 [ MEM[(long int *)_20 + -24B] ]))) 4 {adddi3}
     (expr_list:REG_DEAD (reg:DI 101 [ MEM[(long int *)_20 + -24B] ])
        (nil)))
(insn 45 44 46 4 (set (reg/f:DI 85 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_23 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (ne (reg/f:DI 85 [ _27 ])
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 50)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 50 5 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(code_label 50 48 51 6 12 (nil) [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 52 51 54 6 NOTE_INSN_DELETED)
(insn 54 52 55 6 (set (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 85 [ _27 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_27]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 60)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 60 7 (set (reg:DI 87 [ _32 ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 85 [ _27 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_27]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _27 ])
        (nil)))
      ; pc falls through to BB 10
(code_label 60 57 61 8 13 (nil) [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:DI 10 a0)
        (reg/f:DI 85 [ _27 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 63 62 64 8 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 64 63 65 8 (set (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
        (mem/f:DI (reg/f:DI 85 [ _27 ]) [2 MEM[(const struct ctype *)_27].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 65 64 119 8 (set (reg/f:DI 89 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_35 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
        (nil)))
(insn 119 65 67 8 (set (reg:DI 87 [ _32 ])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(jump_insn 67 119 68 8 (set (pc)
        (if_then_else (eq (reg/f:DI 89 [ _36 ])
                (reg/f:DI 119))
            (label_ref:DI 74)
            (pc))) 182 {*branchdi}
     (int_list:REG_BR_PROB 858993460 (nil))
 -> 74)
(note 68 67 120 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 120 68 70 9 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 70 120 71 9 (set (reg:DI 10 a0)
        (reg/f:DI 85 [ _27 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _27 ])
        (nil)))
(call_insn 71 70 122 9 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 89 [ _36 ]) [0 *OBJ_TYPE_REF(_36;_27->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _36 ])
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 122 71 72 9 (set (reg:DI 122)
        (reg:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 -1
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(insn 72 122 74 9 (set (reg:DI 87 [ _32 ])
        (reg:DI 122)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(code_label 74 72 75 10 14 (nil) [1 uses])
(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (set (reg:DI 11 a1)
        (reg:DI 87 [ _32 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 87 [ _32 ])
        (nil)))
(insn 77 76 78 10 (set (reg:DI 10 a0)
        (reg/f:DI 78 [ _15 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 78 [ _15 ])
        (nil)))
(call_insn 78 77 81 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn 81 78 82 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 254 {call_value_internal}
     (expr_list:REG_UNUSED (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(note 82 81 83 10 NOTE_INSN_DELETED)
(insn 83 82 84 10 (set (reg/v:DI 79 [ i ])
        (sign_extend:DI (plus:SI (subreg:SI (reg/v:DI 79 [ i ]) 0)
                (const_int 1 [0x1])))) "Fibonacci.cpp":18:11 5 {*addsi3_extended}
     (nil))
(insn 84 83 86 10 (set (reg/v:DI 74 [ a ])
        (reg/v:DI 73 [ b ])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/v:DI 73 [ b ])
        (nil)))
(note 86 84 88 10 NOTE_INSN_DELETED)
(insn 88 86 90 10 (set (reg:DI 112 [ n ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 65 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(jump_insn 90 88 91 10 (set (pc)
        (if_then_else (gt (reg:DI 112 [ n ])
                (reg/v:DI 79 [ i ]))
            (label_ref:DI 85)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 112 [ n ])
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 85)
(code_label 91 90 92 11 11 (nil) [1 uses])
(note 92 91 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 98 92 99 11 (parallel [
            (set (reg:DI 116)
                (unspec:DI [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 65 frame)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.49567+0 S8 A64])
                        (mem/v/f/c:DI (reg/f:DI 117) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_COPYSIGN))
            (clobber (scratch:DI))
        ]) "Fibonacci.cpp":20:1 270 {stack_protect_test_di}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(jump_insn 99 98 111 11 (set (pc)
        (if_then_else (eq (reg:DI 116)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "Fibonacci.cpp":20:1 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 116)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 102)
(note 111 99 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 100 111 102 12 (parallel [
            (call (mem:SI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>) [0 __stack_chk_fail S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":20:1 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(code_label 102 100 112 13 16 (nil) [1 uses])
(note 112 102 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 112 104 13 (set (reg/i:DI 10 a0)
        (const_int 0 [0])) "Fibonacci.cpp":20:1 135 {*movdi_64bit}
     (nil))
(insn 104 103 0 13 (use (reg/i:DI 10 a0)) "Fibonacci.cpp":20:1 -1
     (nil))

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2295, decl_uid=49420, cgraph_uid=1029, symbol_order=1204) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 4 for     5: r72:DI=`*.LANCHOR0'
insn_cost 4 for     6: a0:DI=r72:DI
      REG_EQUAL `*.LANCHOR0'
insn_cost 0 for     7: call [`_ZNSt8ios_base4InitC1Ev'] argc:0
      REG_DEAD a0:DI
      REG_CALL_DECL `_ZNSt8ios_base4InitC1Ev'
insn_cost 4 for     9: a2:DI=`__dso_handle'
insn_cost 4 for    10: a1:DI=r72:DI
      REG_DEAD r72:DI
      REG_EQUAL `*.LANCHOR0'
insn_cost 4 for    11: a0:DI=`_ZNSt8ios_base4InitD1Ev'
insn_cost 36 for    12: a0:DI=call [`__cxa_atexit'] argc:0
      REG_DEAD a2:DI
      REG_DEAD a1:DI
      REG_UNUSED a0:DI
      REG_CALL_DECL `__cxa_atexit'
      REG_EH_REGION 0
starting the processing of deferred insns
ending the processing of deferred insns


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2]
;;  ref usage 	r0={2d} r1={2d,1u} r2={1d,4u} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={1d,2u} r10={5d,2u} r11={4d,1u} r12={4d,1u} r13={3d} r14={3d} r15={3d} r16={3d} r17={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,1u} r65={1d,2u} r72={1d,2u} 
;;    total ref usage 119{103d,16u,0e} in 7{5 regular + 2 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 72)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(insn 6 5 7 2 (set (reg:DI 10 a0)
        (reg/f:DI 72)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(call_insn 7 6 9 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >) [0 __ct_comp  S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 9 7 10 2 (set (reg:DI 12 a2)
        (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0x775ee7f332d0 __dso_handle>)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(insn 10 9 11 2 (set (reg:DI 11 a1)
        (reg/f:DI 72)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 11 10 12 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x775ee8af8700 __dt_comp >)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(call_insn/j 12 11 0 2 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>) [0 __cxa_atexit S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 252 {sibcall_value_internal}
     (expr_list:REG_DEAD (reg:DI 12 a2)
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_UNUSED (reg:DI 10 a0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (expr_list:DI (use (reg:DI 12 a2))
                (nil)))))

;; Combiner totals: 86 attempts, 49 substitutions (21 requiring new space),
;; 8 successes.
