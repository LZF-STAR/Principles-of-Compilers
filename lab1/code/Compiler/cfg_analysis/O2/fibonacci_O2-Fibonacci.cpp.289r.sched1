
;; Function std::ctype<char>::do_widen (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=1561, decl_uid=37570, cgraph_uid=532, symbol_order=561)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 14 to 12 -- before reload
;;   ======================================================

;;	  0--> b  0: i  14 r76=a1                                  :alu
;;	  1--> b  0: i  11 a0=r76                                  :alu
;;	  2--> b  0: i  12 use a0                                  :nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 14
;;   new tail = 12


;; Procedure interblock/speculative motions == 0/0 


starting the processing of deferred insns
ending the processing of deferred insns


std::ctype<char>::do_widen

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r8={1d,2u} r10={2d,2u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r64={1d,1u} r65={1d,2u} r76={1d,1u} 
;;    total ref usage 35{23d,12u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 4 2 NOTE_INSN_DELETED)
(note 4 3 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 4 11 2 (set (reg:DI 76)
        (reg:DI 11 a1 [ __c ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1087:7 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 11 a1 [ __c ])
        (nil)))
(insn 11 14 12 2 (set (reg/i:DI 10 a0)
        (reg:DI 76)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 76)
        (nil)))
(insn 12 11 15 2 (use (reg/i:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 -1
     (nil))
(note 15 12 0 NOTE_INSN_DELETED)

;; Function std::endl.isra (_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, funcdef_no=2298, decl_uid=49501, cgraph_uid=1045, symbol_order=1223)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)


std::endl.isra

Dataflow summary:
def_info->table_size = 233, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={5d} r1={5d,1u} r2={1d,13u} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={1d,8u} r10={9d,6u} r11={8d,2u} r12={6d} r13={6d} r14={6d} r15={6d} r16={6d} r17={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,7u} r65={1d,8u} r77={1d,6u} r79={3d,1u} r81={1d,2u} r83={1d,3u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 299{234d,65u,0e} in 28{23 regular + 5 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(1){ }d10(2){ }d36(8){ }d45(10){ }d53(11){ }d59(12){ }d65(13){ }d71(14){ }d77(15){ }d83(16){ }d89(17){ }d155(42){ }d161(43){ }d167(44){ }d173(45){ }d179(46){ }d185(47){ }d191(48){ }d197(49){ }d218(64){ }d219(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; lr  def 	 77 83 84 85 86 93
;; live  in  	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  gen 	 77 83 84 85 86 93
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 89
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 89
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 79
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 79
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83

( 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 79 81 90 91
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
;; live  gen 	 10 [a0] 79 81 90 91
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 79 94
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 81 83
;; live  gen 	 10 [a0] 11 [a1] 79 94
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83

( 7 6 5 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
;; live  gen 	 10 [a0] 11 [a1]
;; live  kill	 1 [ra]
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ }u-1(8){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;; lr  def 	
;; live  in  	 2 [sp] 8 [s0] 65 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 13 to worklist
  Adding insn 20 to worklist
  Adding insn 58 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 36 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
Finished finding needed instructions:
processing block 3 lr out =  2 [sp] 64 [arg] 65 [frame]
processing block 8 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 5 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
  Adding insn 22 to worklist
processing block 7 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 79 83
  Adding insn 37 to worklist
  Adding insn 57 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
processing block 6 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 79 81 83
  Adding insn 4 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
processing block 4 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
  Adding insn 19 to worklist
processing block 2 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 77 83
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
  Adding insn 56 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;;   ======================================================
;;   -- basic block 2 from 56 to 11 -- before reload
;;   ======================================================

;;	  0--> b  0: i  56 r93=a0                                  :alu
;;	  1--> b  0: i   2 r83=r93                                 :alu
;;	  2--> b  0: i   7 r84=[r83]                               :alu
;;	  5--> b  0: i   8 r85=[r84-0x18]                          :alu
;;	  8--> b  0: i   9 r86=r83+r85                             :alu
;;	  9--> b  0: i  10 r77=[r86+0xf0]                          :alu
;;	 12--> b  0: i  11 pc={(r77!=0)?L15:pc}                    :alu
;;	Ready list (final):  
;;   total time = 12
;;   new head = 56
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 13 to 13 -- before reload
;;   ======================================================

;;	  0--> b  0: i  13 {call [`_ZSt16__throw_bad_castv'];clobber ra;}:alu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 13
;;   new tail = 13

;;   ======================================================
;;   -- basic block 4 from 19 to 20 -- before reload
;;   ======================================================

;;	  0--> b  0: i  19 r89=zxn([r77+0x38])                     :alu
;;	  3--> b  0: i  20 pc={(r89==0)?L25:pc}                    :alu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 19
;;   new tail = 20

;;   ======================================================
;;   -- basic block 5 from 22 to 58 -- before reload
;;   ======================================================

;;	  0--> b  0: i  22 r79=zxn([r77+0x43])                     :alu
;;	  1--> b  0: i  58 pc=L39                                  :alu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 22
;;   new tail = 58

;;   ======================================================
;;   -- basic block 6 from 27 to 32 -- before reload
;;   ======================================================

;;	  0--> b  0: i  27 a0=r77                                  :alu
;;	  1--> b  0: i  28 {call [`_ZNKSt5ctypeIcE13_M_widen_initEv'];clobber ra;}:alu
;;	  2--> b  0: i  29 r90=[r77]                               :alu
;;	  3--> b  0: i  31 r91=`_ZNKSt5ctypeIcE8do_widenEc'        :alu
;;	  4--> b  0: i   4 r79=0xa                                 :alu
;;	  5--> b  0: i  30 r81=[r90+0x30]                          :alu
;;	  8--> b  0: i  32 pc={(r81==r91)?L39:pc}                  :alu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 27
;;   new tail = 32

;;   ======================================================
;;   -- basic block 7 from 34 to 37 -- before reload
;;   ======================================================

;;	  0--> b  0: i  34 a1=0xa                                  :alu
;;	  1--> b  0: i  35 a0=r77                                  :alu
;;	  2--> b  0: i  36 {a0=call [r81];clobber ra;}             :alu
;;	  3--> b  0: i  57 r94=a0                                  :alu
;;	  4--> b  0: i  37 r79=r94                                 :alu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 34
;;   new tail = 37

;;   ======================================================
;;   -- basic block 8 from 41 to 46 -- before reload
;;   ======================================================

;;	  0--> b  0: i  41 a1=r79                                  :alu
;;	  1--> b  0: i  42 a0=r83                                  :alu
;;	  2--> b  0: i  43 {a0=call [`_ZNSo3putEc'];clobber ra;}   :alu
;;	  3--> b  0: i  46 a0=call [`_ZNSo5flushEv']               :alu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 41
;;   new tail = 46


;; Procedure interblock/speculative motions == 0/0 


starting the processing of deferred insns
ending the processing of deferred insns


std::endl.isra

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={5d} r1={5d,1u} r2={1d,13u} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={1d,8u} r10={9d,6u} r11={8d,2u} r12={6d} r13={6d} r14={6d} r15={6d} r16={6d} r17={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r60={5d} r61={5d} r62={5d} r63={5d} r64={1d,7u} r65={1d,8u} r77={1d,6u} r79={3d,1u} r81={1d,2u} r83={1d,3u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 299{234d,65u,0e} in 28{23 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 56 2 NOTE_INSN_FUNCTION_BEG)
(insn 56 3 2 2 (set (reg:DI 93)
        (reg:DI 10 a0 [ __os ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":684:5 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0 [ __os ])
        (nil)))
(insn 2 56 7 2 (set (reg/v/f:DI 83 [ __os ])
        (reg:DI 93)) "/usr/riscv64-linux-gnu/include/c++/11/ostream":684:5 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 7 2 8 2 (set (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
        (mem/f:DI (reg/v/f:DI 83 [ __os ]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(insn 8 7 9 2 (set (reg:DI 85 [ MEM[(long int *)_2 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_2 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 84 [ __os_1(D)->_vptr.basic_ostream ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 86)
        (plus:DI (reg/v/f:DI 83 [ __os ])
            (reg:DI 85 [ MEM[(long int *)_2 + -24B] ]))) 4 {adddi3}
     (expr_list:REG_DEAD (reg:DI 85 [ MEM[(long int *)_2 + -24B] ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 77 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 86)
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_5 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg/f:DI 77 [ _13 ])
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 15)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 14 3 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(barrier 14 13 15)
(code_label 15 14 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 17 16 19 4 NOTE_INSN_DELETED)
(insn 19 17 20 4 (set (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 77 [ _13 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_13]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 89 [ MEM[(const struct ctype *)_13]._M_widen_ok ])
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 25)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 58 5 (set (reg:DI 79 [ _18 ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 77 [ _13 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_13]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg/f:DI 77 [ _13 ])
        (nil)))
(jump_insn 58 22 59 5 (set (pc)
        (label_ref 39)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 240 {jump}
     (nil)
 -> 39)
(barrier 59 58 25)
(code_label 25 59 26 6 5 (nil) [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 10 a0)
        (reg/f:DI 77 [ _13 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 28 27 29 6 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 29 28 31 6 (set (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
        (mem/f:DI (reg/f:DI 77 [ _13 ]) [2 MEM[(const struct ctype *)_13].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 31 29 4 6 (set (reg/f:DI 91)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (nil))
(insn 4 31 30 6 (set (reg:DI 79 [ _18 ])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 30 4 32 6 (set (reg/f:DI 81 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_21 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 90 [ MEM[(const struct ctype *)_13].D.37636._vptr.facet ])
        (nil)))
(jump_insn 32 30 33 6 (set (pc)
        (if_then_else (eq (reg/f:DI 81 [ _22 ])
                (reg/f:DI 91))
            (label_ref:DI 39)
            (pc))) 182 {*branchdi}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 39)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 35 34 36 7 (set (reg:DI 10 a0)
        (reg/f:DI 77 [ _13 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 77 [ _13 ])
        (nil)))
(call_insn 36 35 57 7 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 81 [ _22 ]) [0 *OBJ_TYPE_REF(_22;_13->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_DEAD (reg/f:DI 81 [ _22 ])
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 57 36 37 7 (set (reg:DI 94)
        (reg:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(insn 37 57 39 7 (set (reg:DI 79 [ _18 ])
        (reg:DI 94)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(code_label 39 37 40 8 6 (nil) [2 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg:DI 11 a1)
        (reg:DI 79 [ _18 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 79 [ _18 ])
        (nil)))
(insn 42 41 43 8 (set (reg:DI 10 a0)
        (reg/v/f:DI 83 [ __os ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/v/f:DI 83 [ __os ])
        (nil)))
(call_insn 43 42 46 8 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn/j 46 43 47 8 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 252 {sibcall_value_internal}
     (expr_list:REG_UNUSED (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(barrier 47 46 0)

;; Function main (main, funcdef_no=1808, decl_uid=44612, cgraph_uid=542, symbol_order=572) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 19 (  1.4)


main

Dataflow summary:
def_info->table_size = 534, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={12d} r1={13d,1u} r2={1d,25u} r3={12d} r4={12d} r5={12d} r6={12d} r7={12d} r8={1d,13u} r10={21d,14u} r11={19d,6u} r12={13d} r13={13d} r14={13d} r15={13d} r16={13d} r17={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r60={12d} r61={12d} r62={12d} r63={12d} r64={1d,12u} r65={1d,18u} r73={1d,1u} r74={2d,1u} r77={2d,3u} r78={1d,3u} r79={2d,2u} r85={1d,6u} r87={3d,1u} r89={1d,2u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r105={1d,1u} r106={1d,1u} r112={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} r121={1d,1u} r122={1d,1u} 
;;    total ref usage 653{530d,123u,0e} in 62{50 regular + 12 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d24(1){ }d25(2){ }d86(8){ }d107(10){ }d126(11){ }d139(12){ }d152(13){ }d165(14){ }d178(15){ }d191(16){ }d204(17){ }d361(42){ }d374(43){ }d387(44){ }d400(45){ }d413(46){ }d426(47){ }d439(48){ }d452(49){ }d501(64){ }d502(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  in  	
;; live  gen 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]

( 0 )->[2]->( 3 11 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 97 98 117
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0] 11 [a1] 97 98 117
;; live  kill	 1 [ra]
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 74 77 79 118 119
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  gen 	 74 77 79 118 119
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119

( 10 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 118
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 73 77 78 85 100 101 102 121
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 73 77 78 85 100 101 102 121
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119

( 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85
;; lr  def 	 105
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 105
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119

( 6 )->[7]->( 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85
;; lr  def 	 87
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 87
;; live  kill	
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119

( 6 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85 119
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 87 89 106
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
;; live  gen 	 10 [a0] 87 89 106
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 89 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 85 89
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 87 122
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 89 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 87 122
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119

( 9 8 7 )->[10]->( 4 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 78 79 87
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11] 74 79 112
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
;; live  gen 	 10 [a0] 11 [a1] 74 79 112
;; live  kill	 1 [ra]
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119

( 2 10 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; lr  def 	 116
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
;; live  gen 	 116
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]

( 11 )->[12]->( )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 0 [zero] 1 [ra] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	
;; live  kill	 1 [ra]
;; lr  out 	 2 [sp] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 64 [arg] 65 [frame]

( 11 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(2){ }u-1(8){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  use 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; lr  def 	 10 [a0]
;; live  in  	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;; live  gen 	 10 [a0]
;; live  kill	
;; lr  out 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
;; live  out 	 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(1){ }u-1(2){ }u-1(8){ }u-1(10){ }u-1(65){ }}
;; lr  in  	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  use 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; lr  def 	
;; live  in  	 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 33 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 4 to worklist
  Adding insn 46 to worklist
  Adding insn 40 to worklist
  Adding insn 48 to worklist
  Adding insn 55 to worklist
  Adding insn 123 to worklist
  Adding insn 67 to worklist
  Adding insn 63 to worklist
  Adding insn 71 to worklist
  Adding insn 90 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 100 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
processing block 5 lr out =  2 [sp] 64 [arg] 65 [frame]
processing block 13 lr out =  1 [ra] 2 [sp] 8 [s0] 10 [a0] 64 [arg] 65 [frame]
  Adding insn 103 to worklist
processing block 12 lr out =  2 [sp] 64 [arg] 65 [frame]
processing block 11 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame]
processing block 10 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
  Adding insn 88 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
processing block 7 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
  Adding insn 57 to worklist
processing block 9 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 87 117 118 119
  Adding insn 72 to worklist
  Adding insn 122 to worklist
  Adding insn 70 to worklist
  Adding insn 120 to worklist
processing block 8 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 87 89 117 118 119
  Adding insn 119 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 62 to worklist
processing block 6 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
  Adding insn 54 to worklist
processing block 4 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 73 77 78 79 85 117 118 119
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 121 to worklist
  Adding insn 117 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
processing block 3 lr out =  2 [sp] 8 [s0] 64 [arg] 65 [frame] 74 77 79 117 118 119
  Adding insn 66 to worklist
  Adding insn 39 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
processing block 2 lr out =  1 [ra] 2 [sp] 8 [s0] 64 [arg] 65 [frame] 117
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 15 (  1.1)
;;   ======================================================
;;   -- basic block 2 from 3 to 33 -- before reload
;;   ======================================================

;;	  0--> b  0: i  12 a1=frame-0xc                            :alu
;;	  1--> b  0: i   3 r117=`__stack_chk_guard'                :alu
;;	  2--> b  0: i  13 a0=`_ZSt3cin'                           :alu
;;	  3--> b  0: i   4 {[frame-0x8]=unspec[[r117]] 10;scratch=0;}:alu
;;	  4--> b  0: i  14 {a0=call [`_ZNSirsERi'];clobber ra;}    :alu
;;	  5--> b  0: i  15 a1=0                                    :alu
;;	  6--> b  0: i  16 a0=`_ZSt4cout'                          :alu
;;	  7--> b  0: i  17 {a0=call [`_ZNSolsEi'];clobber ra;}     :alu
;;	  8--> b  0: i  20 {call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'];clobber ra;}:alu
;;	  9--> b  0: i  21 a1=0x1                                  :alu
;;	 10--> b  0: i  22 a0=`_ZSt4cout'                          :alu
;;	 11--> b  0: i  23 {a0=call [`_ZNSolsEi'];clobber ra;}     :alu
;;	 12--> b  0: i  26 {call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0'];clobber ra;}:alu
;;	 13--> b  0: i  31 r97=sxn([frame-0xc])                    :alu
;;	 14--> b  0: i  32 r98=0x1                                 :alu
;;	 16--> b  0: i  33 pc={(r97<=r98)?L91:pc}                  :alu
;;	Ready list (final):  
;;   total time = 16
;;   new head = 12
;;   new tail = 33

;;   ======================================================
;;   -- basic block 3 from 5 to 66 -- before reload
;;   ======================================================

;;	  0--> b  0: i   5 r79=0x1                                 :alu
;;	  1--> b  0: i   6 r77=0x1                                 :alu
;;	  2--> b  0: i   7 r74=0                                   :alu
;;	  3--> b  0: i  39 r118=`_ZSt4cout'                        :alu
;;	  4--> b  0: i  66 r119=`_ZNKSt5ctypeIcE8do_widenEc'       :alu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 5
;;   new tail = 66

;;   ======================================================
;;   -- basic block 4 from 35 to 46 -- before reload
;;   ======================================================

;;	  0--> b  0: i  35 r73=r77                                 :alu
;;	  1--> b  0: i  37 r77=sxn(r77#0+r74#0)                    :alu
;;	  2--> b  0: i  38 a1=r77                                  :alu
;;	  3--> b  0: i 117 a0=r118                                 :alu
;;	  4--> b  0: i  40 {a0=call [`_ZNSolsEi'];clobber ra;}     :alu
;;	  5--> b  0: i 121 r121=a0                                 :alu
;;	  6--> b  0: i  41 r78=r121                                :alu
;;	  7--> b  0: i  42 r100=[r78]                              :alu
;;	 10--> b  0: i  43 r101=[r100-0x18]                        :alu
;;	 13--> b  0: i  44 r102=r78+r101                           :alu
;;	 14--> b  0: i  45 r85=[r102+0xf0]                         :alu
;;	 17--> b  0: i  46 pc={(r85!=0)?L50:pc}                    :alu
;;	Ready list (final):  
;;   total time = 17
;;   new head = 35
;;   new tail = 46

;;   ======================================================
;;   -- basic block 5 from 48 to 48 -- before reload
;;   ======================================================

;;	  0--> b  0: i  48 {call [`_ZSt16__throw_bad_castv'];clobber ra;}:alu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 48
;;   new tail = 48

;;   ======================================================
;;   -- basic block 6 from 54 to 55 -- before reload
;;   ======================================================

;;	  0--> b  0: i  54 r105=zxn([r85+0x38])                    :alu
;;	  3--> b  0: i  55 pc={(r105==0)?L60:pc}                   :alu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 54
;;   new tail = 55

;;   ======================================================
;;   -- basic block 7 from 57 to 123 -- before reload
;;   ======================================================

;;	  0--> b  0: i  57 r87=zxn([r85+0x43])                     :alu
;;	  1--> b  0: i 123 pc=L74                                  :alu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 57
;;   new tail = 123

;;   ======================================================
;;   -- basic block 8 from 62 to 67 -- before reload
;;   ======================================================

;;	  0--> b  0: i  62 a0=r85                                  :alu
;;	  1--> b  0: i  63 {call [`_ZNKSt5ctypeIcE13_M_widen_initEv'];clobber ra;}:alu
;;	  2--> b  0: i  64 r106=[r85]                              :alu
;;	  3--> b  0: i 119 r87=0xa                                 :alu
;;	  5--> b  0: i  65 r89=[r106+0x30]                         :alu
;;	  8--> b  0: i  67 pc={(r89==r119)?L74:pc}                 :alu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 62
;;   new tail = 67

;;   ======================================================
;;   -- basic block 9 from 120 to 72 -- before reload
;;   ======================================================

;;	  0--> b  0: i 120 a1=0xa                                  :alu
;;	  1--> b  0: i  70 a0=r85                                  :alu
;;	  2--> b  0: i  71 {a0=call [r89];clobber ra;}             :alu
;;	  3--> b  0: i 122 r122=a0                                 :alu
;;	  4--> b  0: i  72 r87=r122                                :alu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 120
;;   new tail = 72

;;   ======================================================
;;   -- basic block 10 from 76 to 90 -- before reload
;;   ======================================================

;;	  0--> b  0: i  76 a1=r87                                  :alu
;;	  1--> b  0: i  77 a0=r78                                  :alu
;;	  2--> b  0: i  78 {a0=call [`_ZNSo3putEc'];clobber ra;}   :alu
;;	  3--> b  0: i  81 {a0=call [`_ZNSo5flushEv'];clobber ra;} :alu
;;	  4--> b  0: i  88 r112=sxn([frame-0xc])                   :alu
;;	  5--> b  0: i  83 r79=sxn(r79#0+0x1)                      :alu
;;	  6--> b  0: i  84 r74=r73                                 :alu
;;	  7--> b  0: i  90 pc={(r112>r79)?L85:pc}                  :alu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 76
;;   new tail = 90

;;   ======================================================
;;   -- basic block 11 from 98 to 99 -- before reload
;;   ======================================================

;;	  0--> b  0: i  98 {r116=unspec[[frame-0x8],[r117]] 11;clobber scratch;}:alu
;;	  1--> b  0: i  99 pc={(r116==0)?L102:pc}                  :alu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 98
;;   new tail = 99

;;   ======================================================
;;   -- basic block 12 from 100 to 100 -- before reload
;;   ======================================================

;;	  0--> b  0: i 100 {call [`__stack_chk_fail'];clobber ra;} :alu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 100
;;   new tail = 100

;;   ======================================================
;;   -- basic block 13 from 103 to 104 -- before reload
;;   ======================================================

;;	  0--> b  0: i 103 a0=0                                    :alu
;;	  1--> b  0: i 104 use a0                                  :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 103
;;   new tail = 104


;; Procedure interblock/speculative motions == 0/0 


starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1]
;;  ref usage 	r0={12d} r1={13d,1u} r2={1d,25u} r3={12d} r4={12d} r5={12d} r6={12d} r7={12d} r8={1d,13u} r10={21d,14u} r11={19d,6u} r12={13d} r13={13d} r14={13d} r15={13d} r16={13d} r17={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r60={12d} r61={12d} r62={12d} r63={12d} r64={1d,12u} r65={1d,18u} r73={1d,1u} r74={2d,1u} r77={2d,3u} r78={1d,3u} r79={2d,2u} r85={1d,6u} r87={3d,1u} r89={1d,2u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r105={1d,1u} r106={1d,1u} r112={1d,1u} r116={1d,1u} r117={1d,2u} r118={1d,1u} r119={1d,1u} r121={1d,1u} r122={1d,1u} 
;;    total ref usage 653{530d,123u,0e} in 62{50 regular + 12 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 11 2 NOTE_INSN_FUNCTION_BEG)
(note 11 2 29 2 NOTE_INSN_DELETED)
(note 29 11 12 2 NOTE_INSN_DELETED)
(insn 12 29 3 2 (set (reg:DI 11 a1)
        (plus:DI (reg/f:DI 65 frame)
            (const_int -12 [0xfffffffffffffff4]))) "Fibonacci.cpp":10:12 4 {adddi3}
     (nil))
(insn 3 12 13 2 (set (reg/f:DI 117)
        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x775ee803f1b0 __stack_chk_guard>)) "Fibonacci.cpp":4:12 135 {*movdi_64bit}
     (nil))
(insn 13 3 4 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0x775ee842b090 cin>)) "Fibonacci.cpp":10:12 135 {*movdi_64bit}
     (nil))
(insn 4 13 14 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 65 frame)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.49567+0 S8 A64])
                (unspec:DI [
                        (mem/v/f/c:DI (reg/f:DI 117) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_FLE_QUIET))
            (set (scratch:DI)
                (const_int 0 [0]))
        ]) "Fibonacci.cpp":4:12 268 {stack_protect_set_di}
     (nil))
(call_insn 14 4 15 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>) [0 operator>> S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":10:12 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_UNUSED (reg:DI 10 a0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (nil))))
(insn 15 14 16 2 (set (reg:DI 11 a1)
        (const_int 0 [0])) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(insn 16 15 17 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(call_insn 17 16 20 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":11:13 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 20 17 21 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 11 a1)
        (const_int 1 [0x1])) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(insn 22 21 23 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(call_insn 23 22 26 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":12:13 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 26 23 31 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 31 26 32 2 (set (reg:DI 97 [ n ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 65 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(insn 32 31 33 2 (set (reg:DI 98)
        (const_int 1 [0x1])) "Fibonacci.cpp":13:14 135 {*movdi_64bit}
     (nil))
(jump_insn 33 32 106 2 (set (pc)
        (if_then_else (le (reg:DI 97 [ n ])
                (reg:DI 98))
            (label_ref 91)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_DEAD (reg:DI 97 [ n ])
            (int_list:REG_BR_PROB 118111604 (nil))))
 -> 91)
(note 106 33 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 106 6 3 (set (reg/v:DI 79 [ i ])
        (const_int 1 [0x1])) "Fibonacci.cpp":9:7 135 {*movdi_64bit}
     (nil))
(insn 6 5 7 3 (set (reg/v:DI 77 [ b ])
        (const_int 1 [0x1])) "Fibonacci.cpp":8:7 135 {*movdi_64bit}
     (nil))
(insn 7 6 39 3 (set (reg/v:DI 74 [ a ])
        (const_int 0 [0])) "Fibonacci.cpp":7:7 135 {*movdi_64bit}
     (nil))
(insn 39 7 66 3 (set (reg/f:DI 118)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 66 39 85 3 (set (reg/f:DI 119)
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (nil))
(code_label 85 66 34 4 15 (nil) [1 uses])
(note 34 85 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 36 34 35 4 NOTE_INSN_DELETED)
(insn 35 36 37 4 (set (reg/v:DI 73 [ b ])
        (reg/v:DI 77 [ b ])) 135 {*movdi_64bit}
     (nil))
(insn 37 35 38 4 (set (reg/v:DI 77 [ b ])
        (sign_extend:DI (plus:SI (subreg:SI (reg/v:DI 77 [ b ]) 0)
                (subreg:SI (reg/v:DI 74 [ a ]) 0)))) "Fibonacci.cpp":15:11 5 {*addsi3_extended}
     (expr_list:REG_DEAD (reg/v:DI 74 [ a ])
        (nil)))
(insn 38 37 117 4 (set (reg:DI 11 a1)
        (reg/v:DI 77 [ b ])) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 117 38 40 4 (set (reg:DI 10 a0)
        (reg/f:DI 118)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(call_insn 40 117 121 4 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":16:17 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(insn 121 40 41 4 (set (reg:DI 121)
        (reg:DI 10 a0)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(insn 41 121 42 4 (set (reg/f:DI 78 [ _15 ])
        (reg:DI 121)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 42 41 43 4 (set (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
        (mem/f:DI (reg/f:DI 78 [ _15 ]) [2 _15->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(insn 43 42 44 4 (set (reg:DI 101 [ MEM[(long int *)_20 + -24B] ])
        (mem:DI (plus:DI (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_20 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _15->_vptr.basic_ostream ])
        (nil)))
(insn 44 43 45 4 (set (reg/f:DI 102)
        (plus:DI (reg/f:DI 78 [ _15 ])
            (reg:DI 101 [ MEM[(long int *)_20 + -24B] ]))) 4 {adddi3}
     (expr_list:REG_DEAD (reg:DI 101 [ MEM[(long int *)_20 + -24B] ])
        (nil)))
(insn 45 44 46 4 (set (reg/f:DI 85 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_23 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (ne (reg/f:DI 85 [ _27 ])
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 50)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 49 5 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(barrier 49 48 50)
(code_label 50 49 51 6 12 (nil) [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 52 51 54 6 NOTE_INSN_DELETED)
(insn 54 52 55 6 (set (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 85 [ _27 ])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_27]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 105 [ MEM[(const struct ctype *)_27]._M_widen_ok ])
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 60)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 123 7 (set (reg:DI 87 [ _32 ])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 85 [ _27 ])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_27]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _27 ])
        (nil)))
(jump_insn 123 57 124 7 (set (pc)
        (label_ref 74)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 240 {jump}
     (nil)
 -> 74)
(barrier 124 123 60)
(code_label 60 124 61 8 13 (nil) [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:DI 10 a0)
        (reg/f:DI 85 [ _27 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 63 62 64 8 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 64 63 119 8 (set (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
        (mem/f:DI (reg/f:DI 85 [ _27 ]) [2 MEM[(const struct ctype *)_27].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 119 64 65 8 (set (reg:DI 87 [ _32 ])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 65 119 67 8 (set (reg/f:DI 89 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_35 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 106 [ MEM[(const struct ctype *)_27].D.37636._vptr.facet ])
        (nil)))
(jump_insn 67 65 68 8 (set (pc)
        (if_then_else (eq (reg/f:DI 89 [ _36 ])
                (reg/f:DI 119))
            (label_ref:DI 74)
            (pc))) 182 {*branchdi}
     (int_list:REG_BR_PROB 858993460 (nil))
 -> 74)
(note 68 67 120 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 120 68 70 9 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 70 120 71 9 (set (reg:DI 10 a0)
        (reg/f:DI 85 [ _27 ])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _27 ])
        (nil)))
(call_insn 71 70 122 9 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 89 [ _36 ]) [0 *OBJ_TYPE_REF(_36;_27->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _36 ])
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 122 71 72 9 (set (reg:DI 122)
        (reg:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (nil)))
(insn 72 122 74 9 (set (reg:DI 87 [ _32 ])
        (reg:DI 122)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(code_label 74 72 75 10 14 (nil) [2 uses])
(note 75 74 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 82 75 86 10 NOTE_INSN_DELETED)
(note 86 82 76 10 NOTE_INSN_DELETED)
(insn 76 86 77 10 (set (reg:DI 11 a1)
        (reg:DI 87 [ _32 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg:DI 87 [ _32 ])
        (nil)))
(insn 77 76 78 10 (set (reg:DI 10 a0)
        (reg/f:DI 78 [ _15 ])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 78 [ _15 ])
        (nil)))
(call_insn 78 77 81 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_DEAD (reg:DI 11 a1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn 81 78 88 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 254 {call_value_internal}
     (expr_list:REG_UNUSED (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 88 81 83 10 (set (reg:DI 112 [ n ])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 65 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(insn 83 88 84 10 (set (reg/v:DI 79 [ i ])
        (sign_extend:DI (plus:SI (subreg:SI (reg/v:DI 79 [ i ]) 0)
                (const_int 1 [0x1])))) "Fibonacci.cpp":18:11 5 {*addsi3_extended}
     (nil))
(insn 84 83 90 10 (set (reg/v:DI 74 [ a ])
        (reg/v:DI 73 [ b ])) 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/v:DI 73 [ b ])
        (nil)))
(jump_insn 90 84 91 10 (set (pc)
        (if_then_else (gt (reg:DI 112 [ n ])
                (reg/v:DI 79 [ i ]))
            (label_ref:DI 85)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 112 [ n ])
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 85)
(code_label 91 90 92 11 11 (nil) [1 uses])
(note 92 91 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 98 92 99 11 (parallel [
            (set (reg:DI 116)
                (unspec:DI [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 65 frame)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.49567+0 S8 A64])
                        (mem/v/f/c:DI (reg/f:DI 117) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_COPYSIGN))
            (clobber (scratch:DI))
        ]) "Fibonacci.cpp":20:1 270 {stack_protect_test_di}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(jump_insn 99 98 111 11 (set (pc)
        (if_then_else (eq (reg:DI 116)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "Fibonacci.cpp":20:1 182 {*branchdi}
     (expr_list:REG_DEAD (reg:DI 116)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 102)
(note 111 99 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 100 111 101 12 (parallel [
            (call (mem:SI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>) [0 __stack_chk_fail S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":20:1 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 101 100 102)
(code_label 102 101 112 13 16 (nil) [1 uses])
(note 112 102 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 112 104 13 (set (reg/i:DI 10 a0)
        (const_int 0 [0])) "Fibonacci.cpp":20:1 135 {*movdi_64bit}
     (nil))
(insn 104 103 125 13 (use (reg/i:DI 10 a0)) "Fibonacci.cpp":20:1 -1
     (nil))
(note 125 104 0 NOTE_INSN_DELETED)

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2295, decl_uid=49420, cgraph_uid=1029, symbol_order=1204) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 12 -- before reload
;;   ======================================================

;;	  0--> b  0: i   5 r72=`*.LANCHOR0'                        :alu
;;	  1--> b  0: i   6 a0=r72                                  :alu
;;	  2--> b  0: i   7 {call [`_ZNSt8ios_base4InitC1Ev'];clobber ra;}:alu
;;	  3--> b  0: i   9 a2=`__dso_handle'                       :alu
;;	  4--> b  0: i  10 a1=r72                                  :alu
;;	  5--> b  0: i  11 a0=`_ZNSt8ios_base4InitD1Ev'            :alu
;;	  6--> b  0: i  12 a0=call [`__cxa_atexit']                :alu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 5
;;   new tail = 12


;; Procedure interblock/speculative motions == 0/0 


starting the processing of deferred insns
ending the processing of deferred insns


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp] 64 [arg] 65 [frame]
;;  regular block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  eh block artificial uses 	 2 [sp] 8 [s0] 64 [arg] 65 [frame]
;;  entry block defs 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 64 [arg] 65 [frame]
;;  exit block uses 	 1 [ra] 2 [sp] 8 [s0] 65 [frame]
;;  regs ever live 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2]
;;  ref usage 	r0={2d} r1={2d,1u} r2={1d,4u} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={1d,2u} r10={5d,2u} r11={4d,1u} r12={4d,1u} r13={3d} r14={3d} r15={3d} r16={3d} r17={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,1u} r65={1d,2u} r72={1d,2u} 
;;    total ref usage 119{103d,16u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 72)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(insn 6 5 7 2 (set (reg:DI 10 a0)
        (reg/f:DI 72)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(call_insn 7 6 9 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >) [0 __ct_comp  S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 253 {call_internal}
     (expr_list:REG_DEAD (reg:DI 10 a0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >)
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 9 7 10 2 (set (reg:DI 12 a2)
        (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0x775ee7f332d0 __dso_handle>)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(insn 10 9 11 2 (set (reg:DI 11 a1)
        (reg/f:DI 72)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 11 10 12 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x775ee8af8700 __dt_comp >)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(call_insn/j 12 11 13 2 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>) [0 __cxa_atexit S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 252 {sibcall_value_internal}
     (expr_list:REG_DEAD (reg:DI 12 a2)
        (expr_list:REG_DEAD (reg:DI 11 a1)
            (expr_list:REG_UNUSED (reg:DI 10 a0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (expr_list:DI (use (reg:DI 12 a2))
                (nil)))))
(barrier 13 12 0)
