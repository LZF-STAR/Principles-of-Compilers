
;; Function std::ctype<char>::do_widen (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=1561, decl_uid=37570, cgraph_uid=532, symbol_order=561)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 2
	   Spilling non-eliminable hard regs: 2

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 12: point = 0, n_alt = -1
   Insn 11: point = 0, n_alt = -2
   Insn 14: point = 1, n_alt = -2
 r76: [0..1]
Compressing live ranges: from 2 to 2 - 100%
Ranges after the compression:
 r76: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 2
	   Spilling non-eliminable hard regs: 2
New elimination table:
Can eliminate 64 to 2 (offset=0, prev_offset=0)
Can eliminate 64 to 8 (offset=0, prev_offset=0)
Can eliminate 65 to 2 (offset=0, prev_offset=0)
Can eliminate 65 to 8 (offset=0, prev_offset=0)
changing reg in insn 14
changing reg in insn 11
deleting insn with uid = 14.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


std::ctype<char>::do_widen

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp]
;;  regular block artificial uses 	 2 [sp]
;;  eh block artificial uses 	 2 [sp] 64 [arg]
;;  entry block defs 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7]
;;  exit block uses 	 1 [ra] 2 [sp] 10 [a0]
;;  regs ever live 	 10 [a0] 11 [a1]
;;  ref usage 	r1={1d,1u} r2={1d,2u} r10={2d,2u} r11={1d,1u} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d} r17={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} 
;;    total ref usage 25{19d,6u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 4 2 NOTE_INSN_DELETED)
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg/i:DI 10 a0)
        (reg:DI 11 a1 [76])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 135 {*movdi_64bit}
     (nil))
(insn 12 11 15 2 (use (reg/i:DI 10 a0)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":1088:21 -1
     (nil))
(note 15 12 16 NOTE_INSN_DELETED)
(note 16 15 0 NOTE_INSN_DELETED)

;; Function std::endl.isra (_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, funcdef_no=2298, decl_uid=49501, cgraph_uid=1045, symbol_order=1223)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 2
New elimination table:
Can eliminate 64 to 2 (offset=32, prev_offset=0)
Can eliminate 64 to 8 (offset=0, prev_offset=0)
Can eliminate 65 to 2 (offset=0, prev_offset=0)
Can eliminate 65 to 8 (offset=-32, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) m {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 8:  (0) r  (1) m {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) r  (2) r {adddi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 10:  (0) r  (1) m {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (2) r  (3) rJ {*branchdi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) U {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) m {zero_extendqidi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (2) r  (3) rJ {*branchdi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) m {zero_extendqidi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 28:  (0) U {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) m {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) r  (1) m {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (2) r  (3) rJ {*branchdi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) T {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) l {call_value_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 43:  (1) U {call_value_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 46:  (1) U {sibcall_value_internal}
	   Spilling non-eliminable hard regs: 2

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 3
   Insn 13: point = 0, n_alt = 2
  BB 8
   Insn 46: point = 0, n_alt = 2
   Insn 43: point = 0, n_alt = 2
   Insn 42: point = 0, n_alt = -2
   Insn 41: point = 1, n_alt = -2
  BB 5
   Insn 58: point = 3, n_alt = -1
   Insn 22: point = 3, n_alt = 1
  BB 7
   Insn 37: point = 6, n_alt = -2
   Insn 57: point = 8, n_alt = -2
   Insn 36: point = 9, n_alt = 0
   Insn 35: point = 10, n_alt = -2
   Insn 34: point = 11, n_alt = 1
  BB 6
   Insn 32: point = 12, n_alt = 0
   Insn 30: point = 13, n_alt = 2
   Insn 4: point = 15, n_alt = 1
   Insn 31: point = 16, n_alt = 1
   Insn 29: point = 17, n_alt = 2
   Insn 28: point = 18, n_alt = 2
   Insn 27: point = 18, n_alt = -2
  BB 4
   Insn 20: point = 19, n_alt = 0
   Insn 19: point = 20, n_alt = 1
  BB 2
   Insn 11: point = 22, n_alt = 0
   Insn 10: point = 22, n_alt = 2
   Insn 9: point = 24, n_alt = 0
   Insn 8: point = 26, n_alt = 2
   Insn 7: point = 28, n_alt = 2
   Insn 2: point = 29, n_alt = -2
   Insn 56: point = 31, n_alt = -2
 r77: [10..22] [4..5]
 r79: [12..15] [6..6] [1..3]
 r81: [9..13]
 r83: [0..29]
 r84: [27..28]
 r85: [25..26]
 r86: [23..24]
 r89: [19..20]
 r90: [14..17]
 r91: [12..16]
 r93: [30..31]
 r94: [7..8]
Compressing live ranges: from 32 to 21 - 65%
Ranges after the compression:
 r77: [7..12] [2..3]
 r79: [7..10] [4..4] [0..1]
 r81: [7..8]
 r83: [0..18]
 r84: [17..18]
 r85: [15..16]
 r86: [13..14]
 r89: [11..12]
 r90: [9..10]
 r91: [7..10]
 r93: [19..20]
 r94: [5..6]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 2
	   Spilling non-eliminable hard regs: 2
New elimination table:
Can eliminate 64 to 2 (offset=32, prev_offset=32)
Can eliminate 64 to 8 (offset=0, prev_offset=0)
Can eliminate 65 to 2 (offset=0, prev_offset=0)
Can eliminate 65 to 8 (offset=-32, prev_offset=0)
changing reg in insn 10
changing reg in insn 19
changing reg in insn 35
changing reg in insn 29
changing reg in insn 27
changing reg in insn 22
changing reg in insn 11
changing reg in insn 29
changing reg in insn 37
changing reg in insn 4
changing reg in insn 22
changing reg in insn 41
changing reg in insn 30
changing reg in insn 36
changing reg in insn 32
changing reg in insn 2
changing reg in insn 42
changing reg in insn 9
changing reg in insn 7
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 20
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 56
changing reg in insn 2
changing reg in insn 57
changing reg in insn 37
deleting insn with uid = 56.
deleting insn with uid = 57.
deleting insn with uid = 41.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 28.
rescanning insn with uid = 36.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)


std::endl.isra

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp]
;;  regular block artificial uses 	 2 [sp]
;;  eh block artificial uses 	 2 [sp] 64 [arg]
;;  entry block defs 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7]
;;  exit block uses 	 1 [ra] 2 [sp]
;;  regs ever live 	 1 [ra] 2 [sp] 8 [s0] 9 [s1] 10 [a0] 11 [a1] 14 [a4] 15 [a5]
;;  ref usage 	r0={5d} r1={5d,1u} r2={1d,13u} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={1d,3u,1e} r9={1d,6u,1e} r10={9d,6u} r11={10d,2u} r12={6d} r13={6d} r14={7d,1u} r15={12d,7u} r16={6d} r17={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r60={5d} r61={5d} r62={5d} r63={5d} 
;;    total ref usage 269{228d,39u,2e} in 25{20 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 2 2 NOTE_INSN_FUNCTION_BEG)
(insn 2 3 7 2 (set (reg/v/f:DI 8 s0 [orig:83 __os ] [83])
        (reg:DI 10 a0 [93])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":684:5 135 {*movdi_64bit}
     (nil))
(insn 7 2 8 2 (set (reg/f:DI 15 a5 [orig:84 __os_1(D)->_vptr.basic_ostream ] [84])
        (mem/f:DI (reg/v/f:DI 8 s0 [orig:83 __os ] [83]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 8 s0 [orig:83 __os ] [83]) [2 __os_1(D)->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 15 a5 [orig:85 MEM[(long int *)_2 + -24B] ] [85])
        (mem:DI (plus:DI (reg/f:DI 15 a5 [orig:84 __os_1(D)->_vptr.basic_ostream ] [84])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_2 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 15 a5 [86])
        (plus:DI (reg/v/f:DI 8 s0 [orig:83 __os ] [83])
            (reg:DI 15 a5 [orig:85 MEM[(long int *)_2 + -24B] ] [85]))) 4 {adddi3}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 9 s1 [orig:77 _13 ] [77])
        (mem/f:DI (plus:DI (reg/f:DI 15 a5 [86])
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_5 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg/f:DI 9 s1 [orig:77 _13 ] [77])
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 15)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 14 3 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(barrier 14 13 15)
(code_label 15 14 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 17 16 19 4 NOTE_INSN_DELETED)
(insn 19 17 20 4 (set (reg:DI 15 a5 [orig:89 MEM[(const struct ctype *)_13]._M_widen_ok ] [89])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 9 s1 [orig:77 _13 ] [77])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_13]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:DI 15 a5 [orig:89 MEM[(const struct ctype *)_13]._M_widen_ok ] [89])
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (int_list:REG_BR_PROB 524845004 (nil))
 -> 25)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 58 5 (set (reg:DI 11 a1 [orig:79 _18 ] [79])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 9 s1 [orig:77 _13 ] [77])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_13]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (nil))
(jump_insn 58 22 59 5 (set (pc)
        (label_ref 39)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 240 {jump}
     (nil)
 -> 39)
(barrier 59 58 25)
(code_label 25 59 26 6 5 (nil) [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 10 a0)
        (reg/f:DI 9 s1 [orig:77 _13 ] [77])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 28 27 29 6 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 29 28 31 6 (set (reg/f:DI 15 a5 [orig:90 MEM[(const struct ctype *)_13].D.37636._vptr.facet ] [90])
        (mem/f:DI (reg/f:DI 9 s1 [orig:77 _13 ] [77]) [2 MEM[(const struct ctype *)_13].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 9 s1 [orig:77 _13 ] [77]) [2 MEM[(const struct ctype *)_13].D.37636._vptr.facet+0 S8 A64])
        (nil)))
(insn 31 29 4 6 (set (reg/f:DI 14 a4 [91])
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)
        (nil)))
(insn 4 31 30 6 (set (reg:DI 11 a1 [orig:79 _18 ] [79])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 30 4 32 6 (set (reg/f:DI 15 a5 [orig:81 _22 ] [81])
        (mem/f:DI (plus:DI (reg/f:DI 15 a5 [orig:90 MEM[(const struct ctype *)_13].D.37636._vptr.facet ] [90])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_21 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(jump_insn 32 30 33 6 (set (pc)
        (if_then_else (eq (reg/f:DI 15 a5 [orig:81 _22 ] [81])
                (reg/f:DI 14 a4 [91]))
            (label_ref:DI 39)
            (pc))) 182 {*branchdi}
     (int_list:REG_BR_PROB 858993460 (nil))
 -> 39)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 35 34 36 7 (set (reg:DI 10 a0)
        (reg/f:DI 9 s1 [orig:77 _13 ] [77])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(call_insn 36 35 37 7 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 15 a5 [orig:81 _22 ] [81]) [0 *OBJ_TYPE_REF(_22;_13->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 37 36 39 7 (set (reg:DI 11 a1 [orig:79 _18 ] [79])
        (reg:DI 10 a0 [94])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(code_label 39 37 40 8 6 (nil) [2 uses])
(note 40 39 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 40 43 8 (set (reg:DI 10 a0)
        (reg/v/f:DI 8 s0 [orig:83 __os ] [83])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(call_insn 43 42 46 8 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn/j 46 43 47 8 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 252 {sibcall_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(barrier 47 46 60)
(note 60 47 0 NOTE_INSN_DELETED)

;; Function main (main, funcdef_no=1808, decl_uid=44612, cgraph_uid=542, symbol_order=572) (executed once)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 2
New elimination table:
Can eliminate 64 to 2 (offset=96, prev_offset=0)
Can eliminate 64 to 8 (offset=0, prev_offset=0)
Can eliminate 65 to 2 (offset=16, prev_offset=0)
Can eliminate 65 to 8 (offset=-80, prev_offset=0)
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) r  (2) I {adddi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) T {*movdi_64bit}
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =m  (1) m  (2) =&r {stack_protect_set_di}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (1) U {call_value_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (1) U {call_value_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) S {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (1) U {call_value_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) S {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) m {extendsidi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) T {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (2) r  (3) rJ {*branchdi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) T {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) r  (2) r {*addsi3_extended}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (1) U {call_value_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 42:  (0) r  (1) m {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 43:  (0) r  (1) m {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) r  (2) r {adddi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 45:  (0) r  (1) m {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (2) r  (3) rJ {*branchdi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) U {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) m {zero_extendqidi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (2) r  (3) rJ {*branchdi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) m {zero_extendqidi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 63:  (0) U {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 64:  (0) r  (1) m {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 65:  (0) r  (1) m {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (2) r  (3) rJ {*branchdi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) r  (1) T {*movdi_64bit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (1) l {call_value_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 78:  (1) U {call_value_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 81:  (1) U {call_value_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) r  (1) m {extendsidi2}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) r  (2) I {*addsi3_extended}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (2) r  (3) rJ {*branchdi}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) m  (2) m  (3) =&r {stack_protect_test_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (2) r  (3) rJ {*branchdi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 100:  (0) U {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) T {*movdi_64bit}
	   Spilling non-eliminable hard regs: 2

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13

********** Pseudo live ranges #1: **********

  BB 5
   Insn 48: point = 0, n_alt = 2
  BB 12
   Insn 100: point = 0, n_alt = 2
  BB 13
   Insn 104: point = 0, n_alt = -1
   Insn 103: point = 0, n_alt = 1
  BB 11
   Insn 99: point = 0, n_alt = 0
   Insn 98: point = 1, n_alt = 0
  BB 10
   Insn 90: point = 4, n_alt = 0
   Insn 84: point = 5, n_alt = -2
   Insn 83: point = 7, n_alt = 1
   Insn 88: point = 8, n_alt = 1
   Insn 81: point = 9, n_alt = 2
   Insn 78: point = 9, n_alt = 2
   Insn 77: point = 9, n_alt = -2
   Insn 76: point = 10, n_alt = -2
  BB 7
   Insn 123: point = 12, n_alt = -1
   Insn 57: point = 12, n_alt = 1
  BB 9
   Insn 72: point = 15, n_alt = -2
   Insn 122: point = 17, n_alt = -2
   Insn 71: point = 18, n_alt = 0
   Insn 70: point = 19, n_alt = -2
   Insn 120: point = 20, n_alt = 1
  BB 8
   Insn 67: point = 21, n_alt = 0
   Insn 65: point = 21, n_alt = 2
   Insn 119: point = 23, n_alt = 1
   Insn 64: point = 24, n_alt = 2
   Insn 63: point = 25, n_alt = 2
   Insn 62: point = 25, n_alt = -2
  BB 6
   Insn 55: point = 26, n_alt = 0
   Insn 54: point = 27, n_alt = 1
  BB 4
   Insn 46: point = 29, n_alt = 0
   Insn 45: point = 29, n_alt = 2
   Insn 44: point = 31, n_alt = 0
   Insn 43: point = 33, n_alt = 2
   Insn 42: point = 35, n_alt = 2
   Insn 41: point = 36, n_alt = -2
   Insn 121: point = 38, n_alt = -2
   Insn 40: point = 39, n_alt = 2
   Insn 117: point = 39, n_alt = -2
   Insn 38: point = 39, n_alt = -2
   Insn 37: point = 39, n_alt = 0
   Insn 35: point = 41, n_alt = -2
  BB 3
   Insn 66: point = 43, n_alt = 1
   Insn 39: point = 44, n_alt = 1
   Insn 7: point = 45, n_alt = 1
   Insn 6: point = 46, n_alt = 1
   Insn 5: point = 47, n_alt = 1
  BB 2
   Insn 33: point = 49, n_alt = 0
   Insn 32: point = 50, n_alt = 1
   Insn 31: point = 51, n_alt = 1
   Insn 26: point = 52, n_alt = 1
   Insn 23: point = 52, n_alt = 2
   Insn 22: point = 52, n_alt = 1
   Insn 21: point = 52, n_alt = 1
   Insn 20: point = 52, n_alt = 1
   Insn 17: point = 52, n_alt = 2
   Insn 16: point = 52, n_alt = 1
   Insn 15: point = 52, n_alt = 1
   Insn 14: point = 52, n_alt = 2
   Insn 4: point = 52, n_alt = 0
   Insn 13: point = 54, n_alt = 1
   Insn 3: point = 54, n_alt = 1
   Insn 12: point = 55, n_alt = 1
 r73: [6..41]
 r74: [40..45] [4..5]
 r77: [4..46]
 r78: [9..36]
 r79: [4..47]
 r85: [19..29] [13..14]
 r87: [21..23] [15..15] [10..12]
 r89: [18..21]
 r97: [49..51]
 r98: [49..50]
 r100: [34..35]
 r101: [32..33]
 r102: [30..31]
 r105: [26..27]
 r106: [22..24]
 r112: [4..8]
 r116: [0..1]
 r117: [2..54]
 r118: [4..44]
 r119: [4..43]
 r121: [37..38]
 r122: [16..17]
 r123: [52..53]
 r124: [1..2]
Compressing live ranges: from 55 to 34 - 61%
Ranges after the compression:
 r73: [5..29]
 r74: [28..29] [3..4]
 r77: [3..29]
 r78: [7..25]
 r79: [3..29]
 r85: [14..19] [9..10]
 r87: [15..17] [11..11] [7..8]
 r89: [14..15]
 r97: [30..31]
 r98: [30..31]
 r100: [24..25]
 r101: [22..23]
 r102: [20..21]
 r105: [18..19]
 r106: [16..17]
 r112: [3..6]
 r116: [0..1]
 r117: [2..33]
 r118: [3..29]
 r119: [3..29]
 r121: [26..27]
 r122: [12..13]
 r123: [32..33]
 r124: [1..2]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 2
	   Spilling non-eliminable hard regs: 2
New elimination table:
Can eliminate 64 to 2 (offset=96, prev_offset=96)
Can eliminate 64 to 8 (offset=0, prev_offset=0)
Can eliminate 65 to 2 (offset=16, prev_offset=16)
Can eliminate 65 to 8 (offset=-80, prev_offset=0)
changing reg in insn 35
changing reg in insn 84
changing reg in insn 84
changing reg in insn 7
changing reg in insn 37
changing reg in insn 6
changing reg in insn 38
changing reg in insn 35
changing reg in insn 41
changing reg in insn 77
changing reg in insn 44
changing reg in insn 42
changing reg in insn 42
changing reg in insn 83
changing reg in insn 5
changing reg in insn 90
changing reg in insn 45
changing reg in insn 54
changing reg in insn 70
changing reg in insn 64
changing reg in insn 62
changing reg in insn 57
changing reg in insn 46
changing reg in insn 64
changing reg in insn 72
changing reg in insn 119
changing reg in insn 57
changing reg in insn 76
changing reg in insn 65
changing reg in insn 67
changing reg in insn 71
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 54
changing reg in insn 55
changing reg in insn 64
changing reg in insn 65
changing reg in insn 88
changing reg in insn 90
changing reg in insn 98
changing reg in insn 99
changing reg in insn 3
changing reg in insn 98
changing reg in insn 4
changing reg in insn 39
changing reg in insn 117
changing reg in insn 66
changing reg in insn 67
changing reg in insn 121
changing reg in insn 41
changing reg in insn 122
changing reg in insn 72
changing reg in insn 4
changing reg in insn 98
deleting insn with uid = 121.
deleting insn with uid = 122.
deleting insn with uid = 76.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 63.
rescanning insn with uid = 71.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 100.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 19 (  1.4)
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 17 count 15 (  1.1)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp]
;;  regular block artificial uses 	 2 [sp]
;;  eh block artificial uses 	 2 [sp] 64 [arg]
;;  entry block defs 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7]
;;  exit block uses 	 1 [ra] 2 [sp] 10 [a0]
;;  regs ever live 	 1 [ra] 2 [sp] 8 [s0] 9 [s1] 10 [a0] 11 [a1] 14 [a4] 15 [a5] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7]
;;  ref usage 	r0={12d} r1={13d,1u} r2={1d,30u} r3={12d} r4={12d} r5={12d} r6={12d} r7={12d} r8={1d,3u,1e} r9={1d,6u,1e} r10={21d,14u} r11={21d,6u} r12={13d} r13={13d} r14={16d,2u} r15={24d,10u} r16={13d} r17={13d} r18={2d,3u} r19={2d,2u} r20={1d,1u} r21={1d,1u} r22={1d,1u} r23={1d,2u} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r60={12d} r61={12d} r62={12d} r63={12d} 
;;    total ref usage 610{526d,82u,2e} in 59{47 regular + 12 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 11 2 NOTE_INSN_FUNCTION_BEG)
(note 11 2 29 2 NOTE_INSN_DELETED)
(note 29 11 12 2 NOTE_INSN_DELETED)
(insn 12 29 3 2 (set (reg:DI 11 a1)
        (plus:DI (reg/f:DI 2 sp)
            (const_int 4 [0x4]))) "Fibonacci.cpp":10:12 4 {adddi3}
     (nil))
(insn 3 12 13 2 (set (reg/f:DI 23 s7 [117])
        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x775ee803f1b0 __stack_chk_guard>)) "Fibonacci.cpp":4:12 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0x775ee803f1b0 __stack_chk_guard>)
        (nil)))
(insn 13 3 4 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0x775ee842b090 cin>)) "Fibonacci.cpp":10:12 135 {*movdi_64bit}
     (nil))
(insn 4 13 14 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 2 sp)
                        (const_int 8 [0x8])) [14 D.49567+0 S8 A64])
                (unspec:DI [
                        (mem/v/f/c:DI (reg/f:DI 23 s7 [117]) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_FLE_QUIET))
            (set (reg:DI 15 a5 [123])
                (const_int 0 [0]))
        ]) "Fibonacci.cpp":4:12 268 {stack_protect_set_di}
     (nil))
(call_insn 14 4 15 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>) [0 operator>> S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":10:12 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x775ee8337000 operator>>>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (nil))))
(insn 15 14 16 2 (set (reg:DI 11 a1)
        (const_int 0 [0])) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(insn 16 15 17 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":11:13 135 {*movdi_64bit}
     (nil))
(call_insn 17 16 20 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":11:13 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 20 17 21 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 21 20 22 2 (set (reg:DI 11 a1)
        (const_int 1 [0x1])) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(insn 22 21 23 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":12:13 135 {*movdi_64bit}
     (nil))
(call_insn 23 22 26 2 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":12:13 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(call_insn 26 23 31 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>) [0 endl.isra S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":113:13 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0") [flags 0x3]  <function_decl 0x775ee7fee100 endl.isra>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 31 26 32 2 (set (reg:DI 14 a4 [orig:97 n ] [97])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 2 sp)
                    (const_int 4 [0x4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(insn 32 31 33 2 (set (reg:DI 15 a5 [98])
        (const_int 1 [0x1])) "Fibonacci.cpp":13:14 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(jump_insn 33 32 106 2 (set (pc)
        (if_then_else (le (reg:DI 14 a4 [orig:97 n ] [97])
                (reg:DI 15 a5 [98]))
            (label_ref 91)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 91)
(note 106 33 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 106 6 3 (set (reg/v:DI 19 s3 [orig:79 i ] [79])
        (const_int 1 [0x1])) "Fibonacci.cpp":9:7 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 7 3 (set (reg/v:DI 18 s2 [orig:77 b ] [77])
        (const_int 1 [0x1])) "Fibonacci.cpp":8:7 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 39 3 (set (reg/v:DI 15 a5 [orig:74 a ] [74])
        (const_int 0 [0])) "Fibonacci.cpp":7:7 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 39 7 66 3 (set (reg/f:DI 21 s5 [118])
        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0x775ee842b120 cout>)
        (nil)))
(insn 66 39 85 3 (set (reg/f:DI 22 s6 [119])
        (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)) 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x3]  <function_decl 0x775ee8831d00 do_widen>)
        (nil)))
(code_label 85 66 34 4 15 (nil) [1 uses])
(note 34 85 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 36 34 35 4 NOTE_INSN_DELETED)
(insn 35 36 37 4 (set (reg/v:DI 20 s4 [orig:73 b ] [73])
        (reg/v:DI 18 s2 [orig:77 b ] [77])) 135 {*movdi_64bit}
     (nil))
(insn 37 35 38 4 (set (reg/v:DI 18 s2 [orig:77 b ] [77])
        (sign_extend:DI (plus:SI (reg:SI 18 s2 [orig:77 b ] [77])
                (reg:SI 15 a5 [orig:74 a ] [74])))) "Fibonacci.cpp":15:11 5 {*addsi3_extended}
     (nil))
(insn 38 37 117 4 (set (reg:DI 11 a1)
        (reg/v:DI 18 s2 [orig:77 b ] [77])) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 117 38 40 4 (set (reg:DI 10 a0)
        (reg/f:DI 21 s5 [118])) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(call_insn 40 117 41 4 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>) [0 operator<< S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":16:17 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x775ee86a8000 operator<<>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:SI (use (reg:DI 11 a1))
            (nil))))
(insn 41 40 42 4 (set (reg/f:DI 8 s0 [orig:78 _15 ] [78])
        (reg:DI 10 a0 [121])) "Fibonacci.cpp":16:17 135 {*movdi_64bit}
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 15 a5 [orig:100 _15->_vptr.basic_ostream ] [100])
        (mem/f:DI (reg/f:DI 8 s0 [orig:78 _15 ] [78]) [2 _15->_vptr.basic_ostream+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 8 s0 [orig:78 _15 ] [78]) [2 _15->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn 43 42 44 4 (set (reg:DI 15 a5 [orig:101 MEM[(long int *)_20 + -24B] ] [101])
        (mem:DI (plus:DI (reg/f:DI 15 a5 [orig:100 _15->_vptr.basic_ostream ] [100])
                (const_int -24 [0xffffffffffffffe8])) [9 MEM[(long int *)_20 + -24B]+0 S8 A64])) 135 {*movdi_64bit}
     (nil))
(insn 44 43 45 4 (set (reg/f:DI 15 a5 [102])
        (plus:DI (reg/f:DI 8 s0 [orig:78 _15 ] [78])
            (reg:DI 15 a5 [orig:101 MEM[(long int *)_20 + -24B] ] [101]))) 4 {adddi3}
     (nil))
(insn 45 44 46 4 (set (reg/f:DI 9 s1 [orig:85 _27 ] [85])
        (mem/f:DI (plus:DI (reg/f:DI 15 a5 [102])
                (const_int 240 [0xf0])) [6 MEM[(const struct __ctype_type * *)_23 + 240B]+0 S8 A64])) 135 {*movdi_64bit}
     (nil))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (ne (reg/f:DI 9 s1 [orig:85 _27 ] [85])
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":49:7 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 50)
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 49 5 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>) [0 __throw_bad_cast S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/basic_ios.h":50:18 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x775ee999e800 __throw_bad_cast>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
(barrier 49 48 50)
(code_label 50 49 51 6 12 (nil) [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 52 51 54 6 NOTE_INSN_DELETED)
(insn 54 52 55 6 (set (reg:DI 15 a5 [orig:105 MEM[(const struct ctype *)_27]._M_widen_ok ] [105])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 9 s1 [orig:85 _27 ] [85])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_27]._M_widen_ok+0 S1 A64]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 89 {zero_extendqidi2}
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:DI 15 a5 [orig:105 MEM[(const struct ctype *)_27]._M_widen_ok ] [105])
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":877:2 182 {*branchdi}
     (int_list:REG_BR_PROB 524845004 (nil))
 -> 60)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 123 7 (set (reg:DI 11 a1 [orig:87 _32 ] [87])
        (zero_extend:DI (mem:QI (plus:DI (reg/f:DI 9 s1 [orig:85 _27 ] [85])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_27]._M_widen[10]+0 S1 A8]))) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 89 {zero_extendqidi2}
     (nil))
(jump_insn 123 57 124 7 (set (pc)
        (label_ref 74)) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":878:51 240 {jump}
     (nil)
 -> 74)
(barrier 124 123 60)
(code_label 60 124 61 8 13 (nil) [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:DI 10 a0)
        (reg/f:DI 9 s1 [orig:85 _27 ] [85])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 135 {*movdi_64bit}
     (nil))
(call_insn 63 62 64 8 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>) [0 _M_widen_init S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":879:21 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x775ee883a200 _M_widen_init>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 64 63 119 8 (set (reg/f:DI 15 a5 [orig:106 MEM[(const struct ctype *)_27].D.37636._vptr.facet ] [106])
        (mem/f:DI (reg/f:DI 9 s1 [orig:85 _27 ] [85]) [2 MEM[(const struct ctype *)_27].D.37636._vptr.facet+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 9 s1 [orig:85 _27 ] [85]) [2 MEM[(const struct ctype *)_27].D.37636._vptr.facet+0 S8 A64])
        (nil)))
(insn 119 64 65 8 (set (reg:DI 11 a1 [orig:87 _32 ] [87])
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 65 119 67 8 (set (reg/f:DI 15 a5 [orig:89 _36 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 15 a5 [orig:106 MEM[(const struct ctype *)_27].D.37636._vptr.facet ] [106])
                (const_int 48 [0x30])) [4 MEM[(int (*) () *)_35 + 48B]+0 S8 A64])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(jump_insn 67 65 68 8 (set (pc)
        (if_then_else (eq (reg/f:DI 15 a5 [orig:89 _36 ] [89])
                (reg/f:DI 22 s6 [119]))
            (label_ref:DI 74)
            (pc))) 182 {*branchdi}
     (int_list:REG_BR_PROB 858993460 (nil))
 -> 74)
(note 68 67 120 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 120 68 70 9 (set (reg:DI 11 a1)
        (const_int 10 [0xa])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(insn 70 120 71 9 (set (reg:DI 10 a0)
        (reg/f:DI 9 s1 [orig:85 _27 ] [85])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(call_insn 71 70 72 9 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (reg/f:DI 15 a5 [orig:89 _36 ] [89]) [0 *OBJ_TYPE_REF(_36;_27->6) S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(insn 72 71 74 9 (set (reg:DI 11 a1 [orig:87 _32 ] [87])
        (reg:DI 10 a0 [122])) "/usr/riscv64-linux-gnu/include/c++/11/bits/locale_facets.h":880:23 135 {*movdi_64bit}
     (nil))
(code_label 74 72 75 10 14 (nil) [2 uses])
(note 75 74 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 82 75 86 10 NOTE_INSN_DELETED)
(note 86 82 77 10 NOTE_INSN_DELETED)
(insn 77 86 78 10 (set (reg:DI 10 a0)
        (reg/f:DI 8 s0 [orig:78 _15 ] [78])) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 135 {*movdi_64bit}
     (nil))
(call_insn 78 77 81 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>) [0 put S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":685:19 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x775ee86a8a00 put>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:QI (use (reg:DI 11 a1))
            (nil))))
(call_insn 81 78 88 10 (parallel [
            (set (reg:DI 10 a0)
                (call (mem:SI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>) [0 flush S4 A32])
                    (const_int 0 [0])))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/ostream":707:24 254 {call_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x775ee86a8d00 flush>)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 88 81 83 10 (set (reg:DI 14 a4 [orig:112 n ] [112])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 2 sp)
                    (const_int 4 [0x4])) [5 n+0 S4 A32]))) "Fibonacci.cpp":13:14 90 {extendsidi2}
     (nil))
(insn 83 88 84 10 (set (reg/v:DI 19 s3 [orig:79 i ] [79])
        (sign_extend:DI (plus:SI (reg:SI 19 s3 [orig:79 i ] [79])
                (const_int 1 [0x1])))) "Fibonacci.cpp":18:11 5 {*addsi3_extended}
     (nil))
(insn 84 83 90 10 (set (reg/v:DI 15 a5 [orig:74 a ] [74])
        (reg/v:DI 20 s4 [orig:73 b ] [73])) 135 {*movdi_64bit}
     (nil))
(jump_insn 90 84 91 10 (set (pc)
        (if_then_else (gt (reg:DI 14 a4 [orig:112 n ] [112])
                (reg/v:DI 19 s3 [orig:79 i ] [79]))
            (label_ref:DI 85)
            (pc))) "Fibonacci.cpp":13:14 182 {*branchdi}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 85)
(code_label 91 90 92 11 11 (nil) [1 uses])
(note 92 91 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 98 92 99 11 (parallel [
            (set (reg:DI 15 a5 [116])
                (unspec:DI [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 2 sp)
                                (const_int 8 [0x8])) [14 D.49567+0 S8 A64])
                        (mem/v/f/c:DI (reg/f:DI 23 s7 [117]) [14 __stack_chk_guard+0 S8 A64])
                    ] UNSPEC_COPYSIGN))
            (clobber (reg:DI 14 a4 [124]))
        ]) "Fibonacci.cpp":20:1 270 {stack_protect_test_di}
     (nil))
(jump_insn 99 98 111 11 (set (pc)
        (if_then_else (eq (reg:DI 15 a5 [116])
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "Fibonacci.cpp":20:1 182 {*branchdi}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 102)
(note 111 99 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 100 111 101 12 (parallel [
            (call (mem:SI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>) [0 __stack_chk_fail S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "Fibonacci.cpp":20:1 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x775ee8030700 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 101 100 102)
(code_label 102 101 112 13 16 (nil) [1 uses])
(note 112 102 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 112 104 13 (set (reg/i:DI 10 a0)
        (const_int 0 [0])) "Fibonacci.cpp":20:1 135 {*movdi_64bit}
     (nil))
(insn 104 103 125 13 (use (reg/i:DI 10 a0)) "Fibonacci.cpp":20:1 -1
     (nil))
(note 125 104 126 NOTE_INSN_DELETED)
(note 126 125 0 NOTE_INSN_DELETED)

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2295, decl_uid=49420, cgraph_uid=1029, symbol_order=1204) (executed once)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 2
New elimination table:
Can eliminate 64 to 2 (offset=16, prev_offset=0)
Can eliminate 64 to 8 (offset=0, prev_offset=0)
Can eliminate 65 to 2 (offset=0, prev_offset=0)
Can eliminate 65 to 8 (offset=-16, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) T {*movdi_64bit}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) U {call_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) T {*movdi_64bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (1) U {sibcall_value_internal}
	   Spilling non-eliminable hard regs: 2

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 12: point = 0, n_alt = 2
   Insn 11: point = 0, n_alt = 1
   Insn 10: point = 0, n_alt = -2
   Insn 9: point = 1, n_alt = 1
   Insn 7: point = 1, n_alt = 2
   Insn 6: point = 1, n_alt = -2
   Insn 5: point = 1, n_alt = 1
 r72: [0..1]
Compressing live ranges: from 2 to 2 - 100%
Ranges after the compression:
 r72: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 2
	   Spilling non-eliminable hard regs: 2
New elimination table:
Can eliminate 64 to 2 (offset=16, prev_offset=16)
Can eliminate 64 to 8 (offset=0, prev_offset=0)
Can eliminate 65 to 2 (offset=0, prev_offset=0)
Can eliminate 65 to 8 (offset=-16, prev_offset=0)
changing reg in insn 5
changing reg in insn 10
changing reg in insn 6


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [zero] 3 [gp] 4 [tp] 5 [t0] 6 [t1] 7 [t2] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 28 [t3] 29 [t4] 30 [t5] 31 [t6] 32 [ft0] 33 [ft1] 34 [ft2] 35 [ft3] 36 [ft4] 37 [ft5] 38 [ft6] 39 [ft7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7] 60 [ft8] 61 [ft9] 62 [ft10] 63 [ft11]
;;  hardware regs used 	 2 [sp]
;;  regular block artificial uses 	 2 [sp]
;;  eh block artificial uses 	 2 [sp] 64 [arg]
;;  entry block defs 	 1 [ra] 2 [sp] 10 [a0] 11 [a1] 12 [a2] 13 [a3] 14 [a4] 15 [a5] 16 [a6] 17 [a7] 42 [fa0] 43 [fa1] 44 [fa2] 45 [fa3] 46 [fa4] 47 [fa5] 48 [fa6] 49 [fa7]
;;  exit block uses 	 1 [ra] 2 [sp]
;;  regs ever live 	 1 [ra] 2 [sp] 8 [s0] 10 [a0] 11 [a1] 12 [a2]
;;  ref usage 	r0={2d} r1={2d,1u} r2={1d,4u} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={1d,2u} r10={5d,2u} r11={4d,1u} r12={4d,1u} r13={3d} r14={3d} r15={3d} r16={3d} r17={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r60={2d} r61={2d} r62={2d} r63={2d} 
;;    total ref usage 111{100d,11u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 8 s0 [72])
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_EQUIV (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 6 5 7 2 (set (reg:DI 10 a0)
        (reg/f:DI 8 s0 [72])) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(call_insn 7 6 9 2 (parallel [
            (call (mem:SI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >) [0 __ct_comp  S4 A32])
                (const_int 0 [0]))
            (clobber (reg:SI 1 ra))
        ]) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 253 {call_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x775ee8af8500 __ct_comp >)
        (nil))
    (expr_list:DI (use (reg:DI 10 a0))
        (nil)))
(insn 9 7 10 2 (set (reg:DI 12 a2)
        (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0x775ee7f332d0 __dso_handle>)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(insn 10 9 11 2 (set (reg:DI 11 a1)
        (reg/f:DI 8 s0 [72])) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 10 a0)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x775ee8af8700 __dt_comp >)) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 135 {*movdi_64bit}
     (nil))
(call_insn/j 12 11 13 2 (set (reg:DI 10 a0)
        (call (mem:SI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>) [0 __cxa_atexit S4 A32])
            (const_int 0 [0]))) "/usr/riscv64-linux-gnu/include/c++/11/iostream":74:25 252 {sibcall_value_internal}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x775ee7f9b100 __cxa_atexit>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 10 a0))
        (expr_list:DI (use (reg:DI 11 a1))
            (expr_list:DI (use (reg:DI 12 a2))
                (nil)))))
(barrier 13 12 16)
(note 16 13 0 NOTE_INSN_DELETED)
